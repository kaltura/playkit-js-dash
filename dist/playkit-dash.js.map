{"version":3,"sources":["./dash/webpack/universalModuleDefinition","./dash/webpack/bootstrap","./dash/external {\"commonjs\":\"@playkit-js/playkit-js\",\"commonjs2\":\"@playkit-js/playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}","./dash/external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}","./dash/./assets/style.css","./dash/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","./dash/../node_modules/css-loader/dist/runtime/api.js","./dash/./drm/widevine.js","./dash/./drm/playready.js","webpack://playkit.dash/./assets/style.css?703f","./dash/./parser/segment-template.js","./dash/./parser/parser-utils.js","./dash/./parser/essential-property.js","./dash/./parser/representation.js","./dash/./parser/adaptation-set.js","./dash/./parser/dash-manifest-parser.js","./dash/./dash-thumbnail-controller.js","./dash/./dash-adapter.js","./dash/./index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","___CSS_LOADER_API_IMPORT___","push","memo","isOldIE","Boolean","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","useSourceMap","this","map","content","cssMapping","sourceMapping","base64","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","Widevine","isConfigured","drmData","drmConfig","DrmScheme","WIDEVINE","keySystem","find","drmEntry","scheme","canPlayDrm","_logger","debug","setDrmPlayback","config","browser","Env","wwDrmEntry","drm","servers","licenseUrl","advanced","videoRobustness","audioRobustness","getLogger","PlayReady","PLAYREADY","prDrmEntry","locals","SegmentTemplate","elem","_media","XmlUtils","parseAttr","MpdUtils","AttributeTypes","MEDIA","_startNumber","START_NUMBER","parseInt","_duration","DURATION","parseFloat","_timescale","TIMESCALE","parsePositiveInt","_presentationTimeOffset","PRESENTATION_TIME_OFFSET","_endNumber","END_NUMBER","REPRESENTATION","NUMBER","BANDWIDTH","TIME","UrlUtils","url","bitrate","time","expressions","match","replaceTokens","exp","token","replace","MediaTemplateType","ParserUtils","buffer","TextDecoder","decode","Uint8Array","TagTypes","BASE_URL","SEGMENT_TEMPLATE","ESSENTIAL_PROPERTY","ADAPTATION_SET","ID","CONTENT_TYPE","MIME_TYPE","WIDTH","HEIGHT","SCHEME_ID_URI","VALUE","parseXml","text","DOMParser","parseFromString","parseFunction","defaultValue","parsedValue","getAttribute","findElements","node","getElementsByTagName","findChild","children","findChildren","Array","from","child","Element","tagName","intString","Number","floatString","isNaN","EssentialProperty","_schemeIdUri","_value","Representation","_id","_bandwidth","_width","_height","essPropElem","_essentialProperty","AdaptationSet","_mimeType","_contentType","_representations","repElem","segTempElem","_segmentTemplate","VIDEO","AUDIO","TEXT","IMAGE","DashManifestParser","manifest","xmlStr","baseURL","_xmlDoc","innerHTML","_baseURL","textContent","adaptationNodes","imageAdaptationsNodes","adaptation","ContentType","_adaptationSets","ArrayBuffer","isValid","TextEncoder","parseManifest","_parseAdaptionSets","warn","getBaseUrl","getImageSet","adaptationSet","contentType","hasImageSet","DashThumbnailController","set","playerUrl","mediaTemplatePrefix","representations","segmentTemplate","essentialProperty","representation","bandwidth","width","height","startNumber","duration","timescale","presentationTimeOffset","_getEssentialValue","_getDimensions","rows","cols","_tracks","ImageTrack","active","_buildTemplateUrl","customData","includes","values","split","mediaTemplate","last","pop","baseUrl","endsWith","track","_parseTracks","sort","t1","t2","selectTrack","getTracks","getActiveTrack","getThumbnail","activeTrack","sliceWidth","sliceHeight","page","Math","floor","offset","thumbIndex","ThumbnailInfo","x","y","_buildUrlFromTemplate","ShakaEvent","DashAdapter","createAdapter","videoElement","adapterConfig","Utils","copyDeep","DefaultConfig","hasPropertyPath","textTrackVisibile","getPropertyPath","useShakaTextTrackDisplay","streaming","forceBreakStall","lowLatencyMode","trackEmsgEvents","forceRedirectExternalStreams","redirectExternalStreamsHandler","redirectExternalStreamsTimeout","abr","enabled","shakaConfig","capLevelToPlayerSize","defaultBandwidthEstimate","restrictions","createPropertyPath","mergeDeep","playback","html5","dash","defaultPresentationDelay","network","canPlayType","mimeType","toLowerCase","_dashMimeType","isMSESupported","shaka","Player","version","event","_onError","_onAdaptation","_onBuffering","_onDrmSessionUpdate","_onEmsg","EventType","WAITING","_onWaiting","PLAYING","_onPlaying","NaN","_config","_init","setMaxBitrate","_hasLowerOrEqualBitrate","_shaka","configure","maxBandwidth","_getSortedTracks","getVariantTracks","obj1","obj2","maxBitrate","_availableDrmProtocol","_drmProtocols","drmProtocol","isSupported","resetVttPolyfill","VTTCue","polyfill","installAll","isBrowserSupported","undefined","setVideoContainer","Dom","getElementBySelector","_maybeSetFilters","_maybeSetDrmConfig","_maybeBreakStalls","_addBindings","_clearStallInterval","_stallInterval","clearInterval","_stallHandler","getCurrentTimeInSeconds","Date","now","lastUpdateTime","lastCurrentTime","_videoElement","currentTime","setInterval","paused","toFixed","_eventManager","listen","SEEKING","_maybeGetRedirectedUrl","shouldRedirect","timeout","callback","Promise","resolve","Http","jsonp","then","uri","catch","getNetworkingEngine","registerRequestFilter","type","request","RequestType","requestFilterPromise","pkRequest","uris","body","headers","requestFilter","error","reject","updatedRequest","withCredentials","allowCrossSiteCredentials","method","_requestFilterError","registerResponseFilter","response","responseFilterPromise","pkResponse","originalUrl","_sourceObj","responseFilter","updatedResponse","_responseFilterError","_maybeCapLevelToPlayerSize","getRestrictions","minHeight","maxHeight","_videoHeight","minWidth","maxWidth","_videoWidth","minBitrate","Infinity","_clearVideoUpdateTimer","_videoSizeUpdateTimer","_updateRestriction","_maybeApplyAbrRestrictions","shakaRestrictionsConfig","_getRestrictionShakaConfig","getMinDimensions","dim","videoTracks","_getVideoTracks","min","apply","variant","restrictionsShakaConfig","minHeightValue","max","maxHeightValue","minWidthValue","maxWidthValue","minBitrateValue","maxBitrateValue","minBandwidth","attachMediaSource","src","detachMediaSource","_lastTimeDetach","_reset","_loadPromise","_adapterEventsBindings","drmsessionupdate","waiting","playing","LOADED_DATA","_onLoadedData","listenOnce","buffering","emsg","net","NetworkingEngine","SEGMENT","_trigger","FRAG_LOADED","miliSeconds","timeMs","bytes","byteLength","isLive","_dispatchNativeEvent","DURATION_CHANGE","MANIFEST","_parseManifest","_playbackActualUri","MANIFEST_LOADED","setTimeout","_isLive","_isStaticLive","_switchFromDynamicToStatic","_setLowLatencyMode","segmentDuration","getSegmentDuration","_seekRangeStart","seekRange","start","_startOverTimeout","_isStartOver","isAdaptiveBitrateEnabled","load","play","_selectedVideoTrack","selectVideoTrack","manifestBuffer","_manifestParser","startTime","_removeMediaKeys","attach","ABR_MODE_CHANGED","shakaStartTime","tracks","_getParsedTracks","_isDestroyInProgress","Severity","RECOVERABLE","severity","category","code","destroy","resetResult","_thumbnailController","_buffering","_waitingSent","_playingSent","clearTimeout","removeAll","mediaKeys","setMediaKeys","variantTracks","activeVariantTrack","_getActiveTrack","variantTrack","audioId","_getAudioTracks","audioTracks","getAudioLanguagesAndRoles","sameLangAudioVariants","vt","language","some","label","_getParsedVideoTracks","_getParsedAudioTracks","textTracks","_getParsedTextTracks","imageTracks","_getParsedImageTracks","parsedTracks","settings","videoBandwidth","VideoTrack","AudioTrack","getTextTracks","textTrack","kind","TextTrack","imageSet","videoTrack","selectedVideoTrack","selectVariantTrack","_onTrackChanged","selectAudioTrack","audioTrack","selectAudioLanguage","selectTextTrack","setTextTrackVisibility","selectTextLanguage","selectImageTrack","imageTrack","hideTextTrack","enableAdaptiveBitrate","getConfiguration","applyABRRestriction","availableTracks","filterTracksByRestriction","_getLiveEdge","end","seekToLiveEdge","readyState","getStats","maxSegmentDuration","detail","VIDEO_ERROR_CODE","util","ERROR","CRITICAL","Event","createEvent","initEvent","dispatchEvent","DRM_LICENSE_LOADED","licenseTime","drmInfo","metadataTrack","addTextTrack","KIND","METADATA","endTime","metadata","timedMetadata","TimedMetadata","TYPE","EMSG","textTrackCue","createTextTrackCue","addCue","TIMED_METADATA_ADDED","cues","getStartTimeOfDvrWindow","safeSeekOffset","getDrmInfo","licenseServerUri","serverCertificateUri","drmDataObject","certificate","clientWidth","offsetWidth","_contentScaleFactor","clientHeight","offsetHeight","pixelRatio","devicePixelRatio","targetBufferVal","bufferingGoal","BaseMediaSourceAdapter","VERSION","__VERSION__","NAME","__NAME__","registerMediaSourceAdapter"],"mappings":"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","file":"playkit-dash.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@playkit-js/playkit-js\"), require(\"shaka-player\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dash\", [\"playkit-js\", \"shaka-player\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dash\"] = factory(require(\"@playkit-js/playkit-js\"), require(\"shaka-player\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"dash\"] = factory(root[\"playkit\"][\"core\"], root[\"shaka\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".shaka-text-container {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  pointer-events: none;\\n  width: 100%;\\n  min-width: 48px;\\n  transition: bottom cubic-bezier(0.4, 0, 0.6, 1) 0.1s;\\n  transition-delay: 0s;\\n  font-size: 20px;\\n  line-height: 1.4;\\n  color: #fff;\\n  font-family: Roboto-Regular, Roboto, sans-serif, TengwarTelcontar;\\n}\\n.shaka-text-container span.shaka-text-wrapper {\\n  display: inline;\\n  background: 0 0;\\n  text-align: center;\\n}\\n\\n:fullscreen .shaka-text-container {\\n  font-size: 4.4vmin;\\n}\\n\\n:-webkit-full-screen .shaka-text-container {\\n  font-size: 4.4vmin;\\n}\\n\\n:-moz-full-screen .shaka-text-container {\\n  font-size: 4.4vmin;\\n}\\n\\n:-ms-fullscreen .shaka-text-container {\\n  font-size: 4.4vmin;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// @flow\nimport {IDrmProtocol, Env, DrmScheme, getLogger} from '@playkit-js/playkit-js';\n\nconst Widevine: IDrmProtocol = class Widevine {\n  static _logger = getLogger('Widevine');\n\n  /**\n   * Widevine is the configure key system.\n   * @param {Array<Object>} drmData - The drm data.\n   * @param {PKDrmConfigObject} drmConfig - The drm config.\n   * @return {boolean} - Whether Widevine is the configure key system.\n   */\n  static isConfigured(drmData: Array<Object>, drmConfig: PKDrmConfigObject): boolean {\n    return DrmScheme.WIDEVINE === drmConfig.keySystem && !!drmData.find(drmEntry => drmEntry.scheme === drmConfig.keySystem);\n  }\n\n  /**\n   * Widevine playback supports in case 2 conditions are met:\n   * 1. The environment supports Widevine playback.\n   * 2. The drm data of the source object contains entry with Widevine scheme.\n   * @param {Array<Object>} drmData - The drm data to check.\n   * @return {boolean} - Whether Widevine can be play on the current environment.\n   */\n  static canPlayDrm(drmData: Array<Object>): boolean {\n    Widevine._logger.debug('Can play DRM scheme of: ' + DrmScheme.WIDEVINE);\n    return !!drmData.find(drmEntry => drmEntry.scheme === DrmScheme.WIDEVINE);\n  }\n\n  /**\n   * Sets the Widevine playback.\n   * @param {Object} config - The shaka player config.\n   * @param {Array<Object>} drmData - The drm data.\n   * @returns {void}\n   */\n  static setDrmPlayback(config: Object, drmData: Array<Object>): void {\n    Widevine._logger.debug('Sets drm playback');\n    let browser = Env.browser.name;\n    let wwDrmEntry = drmData.find(drmEntry => drmEntry.scheme === DrmScheme.WIDEVINE);\n    if (wwDrmEntry) {\n      config.drm = {\n        servers: {\n          [DrmScheme.WIDEVINE]: wwDrmEntry.licenseUrl\n        },\n        advanced: {}\n      };\n      if (browser === 'Chrome') {\n        config.drm.advanced = {\n          [DrmScheme.WIDEVINE]: {\n            videoRobustness: 'SW_SECURE_CRYPTO',\n            audioRobustness: 'SW_SECURE_CRYPTO'\n          }\n        };\n      }\n    }\n  }\n};\n\nexport {Widevine};\n","// @flow\nimport {IDrmProtocol, DrmScheme, getLogger} from '@playkit-js/playkit-js';\n\nconst PlayReady: IDrmProtocol = class PlayReady {\n  static _logger = getLogger('PlayReady');\n\n  /**\n   * PLAYREADY is the configure key system.\n   * @param {Array<Object>} drmData - The drm data.\n   * @param {PKDrmConfigObject} drmConfig - The drm config.\n   * @return {boolean} - Whether PLAYREADY is the configure key system.\n   */\n  static isConfigured(drmData: Array<Object>, drmConfig: PKDrmConfigObject): boolean {\n    return DrmScheme.PLAYREADY === drmConfig.keySystem && !!drmData.find(drmEntry => drmEntry.scheme === drmConfig.keySystem);\n  }\n\n  /**\n   * PlayReady playback supports in case 2 conditions are met:\n   * 1. The environment supports PlayReady playback.\n   * 2. The drm data of the source object contains entry with PlayReady scheme.\n   * @param {Array<Object>} drmData - The drm data to check.\n   * @return {boolean} - Whether PlayReady can be play on the current environment.\n   */\n  static canPlayDrm(drmData: Array<Object>): boolean {\n    PlayReady._logger.debug('Can play DRM scheme of: ' + DrmScheme.PLAYREADY);\n    return !!drmData.find(drmEntry => drmEntry.scheme === DrmScheme.PLAYREADY);\n  }\n\n  /**\n   * Sets the PlayReady playback.\n   * @param {Object} config - The shaka player config.\n   * @param {Array<Object>} drmData - The drm data.\n   * @returns {void}\n   */\n  static setDrmPlayback(config: Object, drmData: Array<Object>): void {\n    PlayReady._logger.debug('Sets drm playback');\n    let prDrmEntry = drmData.find(drmEntry => drmEntry.scheme === DrmScheme.PLAYREADY);\n    if (prDrmEntry) {\n      config.drm = {\n        servers: {\n          [DrmScheme.PLAYREADY]: prDrmEntry.licenseUrl\n        }\n      };\n    }\n  }\n};\n\nexport {PlayReady};\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// @flow\nimport {MpdUtils, XmlUtils} from './parser-utils';\n\nclass SegmentTemplate {\n  static MediaTemplateType: {[key: string]: string} = {\n    REPRESENTATION: '$RepresentationID$',\n    NUMBER: '$Number$',\n    BANDWIDTH: '$Bandwidth$',\n    TIME: '$Time$'\n  };\n\n  _media: string;\n  _duration: number;\n  _startNumber: number;\n  // Live related\n  _timescale: number;\n  _presentationTimeOffset: number;\n  _endNumber: number;\n\n  constructor(elem: HTMLElement) {\n    this._media = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.MEDIA);\n    this._startNumber = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.START_NUMBER, XmlUtils.parseInt, 1);\n    this._duration = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.DURATION, XmlUtils.parseFloat);\n    this._timescale = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.TIMESCALE, XmlUtils.parsePositiveInt, 1);\n    this._presentationTimeOffset = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.PRESENTATION_TIME_OFFSET, XmlUtils.parseInt, 0);\n    this._endNumber = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.END_NUMBER, XmlUtils.parsePositiveInt);\n  }\n\n  get media(): string {\n    return this._media;\n  }\n\n  get startNumber(): number {\n    return this._startNumber;\n  }\n\n  get duration(): number {\n    return this._duration;\n  }\n\n  get timescale(): number {\n    return this._timescale;\n  }\n\n  get presentationTimeOffset(): number {\n    return this._presentationTimeOffset;\n  }\n\n  get endNumber(): number {\n    return this._endNumber;\n  }\n}\n\nexport {SegmentTemplate};\n","// @flow\nimport {SegmentTemplate} from './segment-template';\n\nconst UrlUtils = {\n  resolve: (url: string, data: {id?: string, index?: number, bitrate?: number, time?: number}): string => {\n    const {id, index, bitrate, time} = data;\n    const regExp = /\\$([a-zA-Z]+)\\$/g;\n    const expressions = url.match(regExp);\n    const replaceTokens = (url: string, exp: string, token: any) => (token ? url.replace(exp, token) : url);\n    if (expressions) {\n      expressions.forEach((exp: string) => {\n        switch (exp) {\n          case SegmentTemplate.MediaTemplateType.REPRESENTATION:\n            url = replaceTokens(url, exp, id);\n            break;\n          case SegmentTemplate.MediaTemplateType.NUMBER:\n            url = replaceTokens(url, exp, index);\n            break;\n          case SegmentTemplate.MediaTemplateType.BANDWIDTH:\n            url = replaceTokens(url, exp, bitrate);\n            break;\n          case SegmentTemplate.MediaTemplateType.TIME:\n            url = replaceTokens(url, exp, time);\n            break;\n        }\n      });\n    }\n    return url;\n  }\n};\n\nconst ParserUtils = {\n  BufferToStr: (buffer: ArrayBuffer): ?string => {\n    if (TextDecoder) {\n      const textDecoder = new TextDecoder();\n      return textDecoder.decode(new Uint8Array(buffer));\n    }\n    return null;\n  },\n  StrToBuffer: (str: string): ?Uint8Array => {\n    if (TextEncoder) {\n      const textEncoder = new TextEncoder();\n      return textEncoder.encode(str);\n    }\n    return null;\n  }\n};\n\nconst MpdUtils = {\n  TagTypes: {\n    BASE_URL: 'BaseURL',\n    SEGMENT_TEMPLATE: 'SegmentTemplate',\n    REPRESENTATION: 'Representation',\n    ESSENTIAL_PROPERTY: 'EssentialProperty',\n    ADAPTATION_SET: 'AdaptationSet'\n  },\n  AttributeTypes: {\n    BASE_URL: 'BaseURL',\n    ID: 'id',\n    CONTENT_TYPE: 'contentType',\n    MIME_TYPE: 'mimeType',\n    MEDIA: 'media',\n    DURATION: 'duration',\n    START_NUMBER: 'startNumber',\n    TIMESCALE: 'timescale',\n    PRESENTATION_TIME_OFFSET: 'presentationTimeOffset',\n    END_NUMBER: 'endNumber',\n    BANDWIDTH: 'bandwidth',\n    WIDTH: 'width',\n    HEIGHT: 'height',\n    SCHEME_ID_URI: 'schemeIdUri',\n    VALUE: 'value'\n  }\n};\n\nconst XmlUtils = {\n  parseXml: (text: string): Document => {\n    const domParser = new DOMParser();\n    return domParser.parseFromString(text, 'text/xml');\n  },\n  parseAttr: (elem: HTMLElement, name: string, parseFunction?: Function, defaultValue: any): any => {\n    let parsedValue = null;\n    const value = elem.getAttribute(name);\n    if (value !== null) {\n      parsedValue = parseFunction ? parseFunction(value) : value;\n    }\n    return parsedValue == null ? defaultValue : parsedValue;\n  },\n  findElements: (node: HTMLElement, name: string): HTMLCollection<HTMLElement> => {\n    return node.getElementsByTagName(name);\n  },\n  findChild(elem: HTMLElement, name: string): ?HTMLElement {\n    const children = this.findChildren(elem, name);\n    if (children.length !== 1) {\n      return null;\n    }\n    return children[0];\n  },\n  findChildren: (elem: HTMLElement, name: string): Array<HTMLElement> => {\n    return Array.from(elem.childNodes).filter(child => {\n      return child instanceof Element && child.tagName === name;\n    });\n  },\n  parseInt: (intString: string): ?number => {\n    const n = Number(intString);\n    return n % 1 === 0 ? n : null;\n  },\n  parsePositiveInt: (intString: string): ?number => {\n    const n = Number(intString);\n    return n % 1 === 0 && n > 0 ? n : null;\n  },\n  parseFloat: (floatString: string): ?number => {\n    const n = Number(floatString);\n    return !isNaN(n) ? n : null;\n  }\n};\n\nexport {ParserUtils, MpdUtils, XmlUtils, UrlUtils};\n","// @flow\nimport {MpdUtils, XmlUtils} from './parser-utils';\n\nclass EssentialProperty {\n  _schemeIdUri: string;\n  _value: string;\n\n  constructor(elem: HTMLElement) {\n    this._schemeIdUri = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.SCHEME_ID_URI);\n    this._value = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.VALUE);\n  }\n\n  get schemeIdUri(): string {\n    return this._schemeIdUri;\n  }\n\n  get value(): string {\n    return this._value;\n  }\n}\n\nexport {EssentialProperty};\n","// @flow\nimport {EssentialProperty} from './essential-property';\nimport {MpdUtils, XmlUtils} from './parser-utils';\n\nclass Representation {\n  _id: string;\n  _bandwidth: number;\n  _width: number;\n  _height: number;\n  _essentialProperty: ?EssentialProperty;\n\n  constructor(elem: HTMLElement) {\n    this._id = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.ID);\n    this._bandwidth = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.BANDWIDTH, parseInt);\n    this._width = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.WIDTH, parseInt);\n    this._height = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.HEIGHT, parseInt);\n    const essPropElem = XmlUtils.findChild(elem, MpdUtils.TagTypes.ESSENTIAL_PROPERTY);\n    if (essPropElem) {\n      this._essentialProperty = new EssentialProperty(essPropElem);\n    }\n  }\n\n  get bandwidth(): number {\n    return this._bandwidth;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  get essentialProperty(): ?EssentialProperty {\n    return this._essentialProperty;\n  }\n}\n\nexport {Representation};\n","// @flow\nimport {SegmentTemplate} from './segment-template';\nimport {Representation} from './representation';\nimport {MpdUtils, XmlUtils} from './parser-utils';\nimport {EssentialProperty} from './essential-property';\n\nclass AdaptationSet {\n  static ContentType: {[type: string]: string} = {\n    VIDEO: 'video',\n    AUDIO: 'audio',\n    TEXT: 'text',\n    IMAGE: 'image'\n  };\n\n  _id: string;\n  _mimeType: string;\n  _contentType: string;\n  _segmentTemplate: SegmentTemplate;\n  _essentialProperty: ?EssentialProperty;\n  _representations: Array<Representation>;\n\n  constructor(elem: HTMLElement) {\n    this._id = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.ID);\n    this._mimeType = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.MIME_TYPE);\n    this._contentType = XmlUtils.parseAttr(elem, MpdUtils.AttributeTypes.CONTENT_TYPE);\n    this._representations = Array.from(XmlUtils.findChildren(elem, MpdUtils.TagTypes.REPRESENTATION)).map(repElem => new Representation(repElem));\n    const segTempElem = XmlUtils.findChild(elem, MpdUtils.TagTypes.SEGMENT_TEMPLATE);\n    if (segTempElem) {\n      this._segmentTemplate = new SegmentTemplate(segTempElem);\n    }\n    const essPropElem = XmlUtils.findChild(elem, MpdUtils.TagTypes.ESSENTIAL_PROPERTY);\n    if (essPropElem) {\n      this._essentialProperty = new EssentialProperty(essPropElem);\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  get mimeType(): string {\n    return this._mimeType;\n  }\n\n  get contentType(): string {\n    return this._contentType;\n  }\n\n  get segmentTemplate(): SegmentTemplate {\n    return this._segmentTemplate;\n  }\n\n  get essentialProperty(): ?EssentialProperty {\n    return this._essentialProperty;\n  }\n\n  get representations(): Array<Representation> {\n    return this._representations;\n  }\n}\n\nexport {AdaptationSet};\n","// @flow\nimport {MpdUtils, ParserUtils, XmlUtils} from './parser-utils';\nimport {AdaptationSet} from './adaptation-set';\nimport {getLogger} from '@playkit-js/playkit-js';\n\nclass DashManifestParser {\n  _logger: any = getLogger('DashManifestParser');\n  _xmlDoc: Document;\n  _adaptationSets: Array<AdaptationSet>;\n  _baseURL: ?string;\n\n  static isValid(): boolean {\n    return window.TextEncoder && window.TextDecoder;\n  }\n\n  constructor(manifest: ArrayBuffer | string) {\n    this._logger.debug('Initialize manifest parser');\n    this._adaptationSets = [];\n    let xmlStr;\n    if (manifest instanceof ArrayBuffer) {\n      xmlStr = ParserUtils.BufferToStr(manifest);\n    } else {\n      xmlStr = manifest;\n    }\n    if (xmlStr) {\n      this._xmlDoc = XmlUtils.parseXml(xmlStr);\n    }\n  }\n\n  parseManifest() {\n    try {\n      this._logger.debug('Start parsing dash manifest');\n      // For now parse only adaptation sets\n      this._parseAdaptionSets();\n      this._logger.debug('Manifest parsing finished successfully');\n    } catch (e) {\n      this._logger.warn('Manifest parsing failed', e);\n    }\n  }\n\n  // return the manifest BaseURL tag textvalue\n  getBaseUrl(): string {\n    return this._baseURL || '';\n  }\n\n  getImageSet(): ?AdaptationSet {\n    return this._adaptationSets.find((adaptationSet: AdaptationSet) => adaptationSet.contentType === AdaptationSet.ContentType.IMAGE);\n  }\n\n  hasImageSet(): boolean {\n    return !!this.getImageSet();\n  }\n\n  get adaptationSets(): Array<AdaptationSet> {\n    return this._adaptationSets;\n  }\n\n  _parseAdaptionSets = () => {\n    const baseURL = XmlUtils.findElements(this._xmlDoc, MpdUtils.TagTypes.BASE_URL);\n    if (baseURL && baseURL.length > 0) {\n      if (baseURL[0].innerHTML) {\n        this._baseURL = baseURL[0].textContent;\n      }\n    }\n    const adaptationNodes = XmlUtils.findElements(this._xmlDoc, MpdUtils.TagTypes.ADAPTATION_SET);\n    // For now parse only image adaptation sets\n    const imageAdaptationsNodes = Array.from(adaptationNodes).filter(\n      adaptation => XmlUtils.parseAttr(adaptation, MpdUtils.AttributeTypes.CONTENT_TYPE) === AdaptationSet.ContentType.IMAGE\n    );\n    if (imageAdaptationsNodes.length > 0) {\n      this._adaptationSets = imageAdaptationsNodes.map(adaptation => new AdaptationSet(adaptation));\n      this._logger.debug('Found image adaptation set', this._adaptationSets);\n    } else {\n      this._logger.debug('No image adaptations were found in manifest');\n    }\n  };\n}\n\nexport {DashManifestParser};\n","// @flow\nimport {AdaptationSet} from './parser/adaptation-set';\nimport {Representation} from './parser/representation';\nimport {UrlUtils} from './parser/parser-utils';\nimport {ImageTrack, ThumbnailInfo} from '@playkit-js/playkit-js';\nimport {EssentialProperty} from './parser/essential-property';\n\nclass DashThumbnailController {\n  _tracks: Array<ImageTrack> = [];\n\n  constructor(set: AdaptationSet, playerUrl: string, mediaTemplatePrefix: string) {\n    this._parseTracks(set, playerUrl, mediaTemplatePrefix);\n    if (this._tracks.length > 0) {\n      this._tracks.sort((t1: ImageTrack, t2: ImageTrack) => t1.customData.bitrate - t2.customData.bitrate);\n      this.selectTrack(this._tracks[this._tracks.length - 1]);\n    }\n  }\n\n  selectTrack(track: ImageTrack): void {\n    this._tracks.forEach((t: ImageTrack) => (t.index === track.index ? (t.active = true) : (t.active = false)));\n  }\n\n  getTracks(): Array<ImageTrack> {\n    return this._tracks;\n  }\n\n  getActiveTrack(): ImageTrack {\n    return this._tracks.find((t: ImageTrack) => t.active);\n  }\n\n  getThumbnail(time: number): ThumbnailInfo {\n    const activeTrack = this.getActiveTrack();\n    const {duration, rows, cols, sliceWidth, sliceHeight, customData} = activeTrack;\n    const page = Math.floor(time / duration) + customData.startNumber;\n    const offset = time % duration;\n    const thumbIndex = Math.floor((offset * rows * cols) / duration);\n    return new ThumbnailInfo({\n      width: Math.floor(sliceWidth),\n      height: Math.floor(sliceHeight),\n      x: Math.floor(thumbIndex % rows) * sliceWidth,\n      y: Math.floor(thumbIndex / rows) * sliceHeight,\n      url: this._buildUrlFromTemplate(activeTrack, page)\n    });\n  }\n\n  _parseTracks = (set: AdaptationSet, playerUrl: string, mediaTemplatePrefix: string): void => {\n    const {representations, segmentTemplate, essentialProperty} = set;\n    representations.forEach((representation: Representation, index: number) => {\n      const {id, bandwidth, width, height} = representation;\n      const {startNumber, duration, media, timescale, presentationTimeOffset} = segmentTemplate;\n      const value = this._getEssentialValue(essentialProperty, representation);\n      const [rows, cols] = this._getDimensions(value);\n      this._tracks.push(\n        new ImageTrack({\n          id,\n          index,\n          active: false,\n          width,\n          height,\n          duration,\n          rows,\n          cols,\n          url: this._buildTemplateUrl(media, id, playerUrl, mediaTemplatePrefix),\n          customData: {\n            bitrate: bandwidth,\n            startNumber,\n            timescale,\n            presentationTimeOffset\n          }\n        })\n      );\n    });\n  };\n\n  _getDimensions = (value: string): Array<number> => {\n    let rows = 1,\n      cols = 1;\n    if (value.includes('x')) {\n      const values = value.split('x');\n      rows = parseInt(values[0]);\n      cols = parseInt(values[1]);\n    }\n    return [rows, cols];\n  };\n\n  _getEssentialValue = (essentialProperty: ?EssentialProperty, representation: Representation): string => {\n    return essentialProperty ? essentialProperty.value : representation.essentialProperty ? representation.essentialProperty.value : '';\n  };\n\n  _buildTemplateUrl = (mediaTemplate: string, id: string, url: string, mediaTemplatePrefix: string): string => {\n    const last = url.split('/').pop();\n    const baseUrl = url.replace(last, '');\n    const regex = /^\\.\\/|^\\./;\n    mediaTemplatePrefix = mediaTemplatePrefix.replace(regex, '');\n    if (mediaTemplatePrefix.length > 0 && !mediaTemplatePrefix.endsWith('/')) {\n      mediaTemplatePrefix += '/';\n    }\n    const urlTemplate = `${baseUrl}${mediaTemplatePrefix}${mediaTemplate}`;\n    return UrlUtils.resolve(urlTemplate, {id});\n  };\n\n  _buildUrlFromTemplate = (track: ImageTrack, index: number): string => {\n    return UrlUtils.resolve(track.url, {\n      index,\n      time: (index - 1) * track.duration * track.customData.timescale,\n      bitrate: track.customData.bitrate\n    });\n  };\n}\n\nexport {DashThumbnailController};\n","// @flow\nimport shaka from 'shaka-player';\nimport {\n  AudioTrack,\n  BaseMediaSourceAdapter,\n  Error,\n  EventType,\n  RequestType,\n  TextTrack,\n  Track,\n  TimedMetadata,\n  createTextTrackCue,\n  Utils,\n  VideoTrack,\n  ImageTrack,\n  ThumbnailInfo,\n  PKABRRestrictionObject,\n  filterTracksByRestriction\n} from '@playkit-js/playkit-js';\nimport {Widevine} from './drm/widevine';\nimport {PlayReady} from './drm/playready';\nimport DefaultConfig from './default-config';\nimport './assets/style.css';\nimport {DashManifestParser} from './parser/dash-manifest-parser';\nimport {DashThumbnailController} from './dash-thumbnail-controller';\n\ntype ShakaEventType = {[event: string]: string};\n\n/**\n * Shaka events enum\n * @type {Object}\n * @const\n */\nconst ShakaEvent: ShakaEventType = {\n  ERROR: 'error',\n  ADAPTATION: 'adaptation',\n  BUFFERING: 'buffering',\n  DRM_SESSION_UPDATE: 'drmsessionupdate',\n  EMSG: 'emsg'\n};\n\n/**\n * the interval in which to sample player size changes\n * @type {number}\n * @const\n */\nconst ABR_RESTRICTION_UPDATE_INTERVAL = 1000;\n\n/**\n * the interval for stall detection in milliseconds\n * @type {number}\n * @const\n */\nconst STALL_DETECTION_INTERVAL = 500;\n\n/**\n * the threshold for stall detection in seconds\n * @type {number}\n * @const\n */\nconst STALL_DETECTION_THRESHOLD = 3;\n\n/**\n * the threshold needed to break the stall\n * @type {number}\n * @const\n */\nconst STALL_BREAK_THRESHOLD = 0.1;\n\n/**\n * Adapter of shaka lib for dash content\n * @classdesc\n */\nexport default class DashAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of Adapter\n   * @member {string} id\n   * @static\n   * @public\n   */\n  static id = 'DashAdapter';\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(DashAdapter.id);\n  /**\n   * The supported mime type by the dash adapter\n   * @member {string} _dashMimeType\n   * @static\n   * @private\n   */\n  static _dashMimeType = 'application/dash+xml';\n  /**\n   * The DRM protocols implementations for dash adapter.\n   * @type {Array<Function>}\n   * @private\n   * @static\n   */\n  static _drmProtocols: Array<Function> = [Widevine, PlayReady];\n  /**\n   * The DRM protocols available for the current playback.\n   * @type {Array<Function>}\n   * @private\n   * @static\n   */\n  static _availableDrmProtocol: Array<Function> = [];\n  /**\n   * The shaka Lib\n   * @member {any} _shakaLib\n   * @private\n   */\n  _shakaLib: any = shaka;\n  /**\n   * The shaka player instance\n   * @member {any} _shaka\n   * @private\n   */\n  _shaka: any;\n  /**\n   * an object containing all the events we bind and unbind to.\n   * @member {Object} - _adapterEventsBindings\n   * @type {Object}\n   * @private\n   */\n  _adapterEventsBindings: {[name: string]: Function} = {\n    [ShakaEvent.ERROR]: event => this._onError(event),\n    [ShakaEvent.ADAPTATION]: () => this._onAdaptation(),\n    [ShakaEvent.BUFFERING]: event => this._onBuffering(event),\n    [ShakaEvent.DRM_SESSION_UPDATE]: () => this._onDrmSessionUpdate(),\n    [ShakaEvent.EMSG]: event => this._onEmsg(event),\n    [EventType.WAITING]: () => this._onWaiting(),\n    [EventType.PLAYING]: () => this._onPlaying()\n  };\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n  /**\n   * The buffering state flag\n   * @member {boolean} - _buffering\n   * @type {boolean}\n   * @private\n   */\n  _buffering: boolean = false;\n  /**\n   * Whether 'waiting' event has been sent by the HTMLVideoElement\n   * @member {boolean} - _waitingSent\n   * @type {boolean}\n   * @private\n   */\n  _waitingSent: boolean = false;\n  /**\n   * Whether 'playing' event has been sent by the HTMLVideoElement\n   * @member {boolean} - _playingSent\n   * @type {boolean}\n   * @private\n   */\n  _playingSent: boolean = false;\n\n  /**\n   * Video size update timer\n   * @type {null|number}\n   * @private\n   */\n  _videoSizeUpdateTimer: ?IntervalID = null;\n\n  /**\n   * stall interval to break the stall on Smart TV\n   * @type {null|IntervalID}\n   * @private\n   */\n  _stallInterval: ?IntervalID = null;\n\n  /**\n   * 3016 is the number of the video error at shaka, we already listens to it in the html5 class\n   * @member {number} - VIDEO_ERROR_CODE\n   * @type {number}\n   * @private\n   */\n  VIDEO_ERROR_CODE: number = 3016;\n  /**\n   * The last time detach occurred\n   * @type {number}\n   * @private\n   */\n  _lastTimeDetach: number = NaN;\n  /**\n   * Whether the request filter threw an error\n   * @type {boolean}\n   * @private\n   */\n  _requestFilterError: boolean = false;\n  /**\n   * Whether the response filter threw an error\n   * @type {boolean}\n   * @private\n   */\n  _responseFilterError: boolean = false;\n  /**\n   * Whether async destroy is in progress\n   * @type {boolean}\n   * @private\n   */\n  _isDestroyInProgress: boolean = false;\n  /**\n   * Custom dash manifest parser.\n   * @type {DashManifestParser}\n   * @private\n   */\n  _manifestParser: ?DashManifestParser;\n  /**\n   * Dash thumbnail controller.\n   * @type {DashThumbnailController}\n   * @private\n   */\n  _thumbnailController: ?DashThumbnailController;\n  _isStartOver: boolean = true;\n  _seekRangeStart: number = 0;\n  _startOverTimeout: TimeoutID;\n  _isLive: boolean = false;\n  _isStaticLive: boolean = false;\n  _selectedVideoTrack: ?VideoTrack = null;\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {PKMediaSourceObject} source - The source Object.\n   * @param {Object} config - The player configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: PKMediaSourceObject, config: Object): IMediaSourceAdapter {\n    let adapterConfig: Object = Utils.Object.copyDeep(DefaultConfig);\n    if (Utils.Object.hasPropertyPath(config, 'text.useNativeTextTrack')) {\n      adapterConfig.textTrackVisibile = Utils.Object.getPropertyPath(config, 'text.useNativeTextTrack');\n    }\n    if (Utils.Object.hasPropertyPath(config, 'text.useShakaTextTrackDisplay')) {\n      adapterConfig.useShakaTextTrackDisplay = Utils.Object.getPropertyPath(config, 'text.useShakaTextTrackDisplay');\n      adapterConfig.textTrackVisibile = adapterConfig.textTrackVisibile || adapterConfig.useShakaTextTrackDisplay;\n    }\n    if (Utils.Object.hasPropertyPath(config, 'streaming')) {\n      const {streaming} = config;\n      if (typeof streaming.forceBreakStall === 'boolean') {\n        adapterConfig.forceBreakStall = streaming.forceBreakStall;\n      }\n      if (typeof streaming.lowLatencyMode === 'boolean') {\n        adapterConfig.lowLatencyMode = streaming.lowLatencyMode;\n      }\n      if (typeof streaming.trackEmsgEvents === 'boolean') {\n        adapterConfig.trackEmsgEvents = streaming.trackEmsgEvents;\n      }\n    }\n    if (Utils.Object.hasPropertyPath(config, 'sources.options')) {\n      const options = config.sources.options;\n      adapterConfig.forceRedirectExternalStreams = options.forceRedirectExternalStreams;\n      adapterConfig.redirectExternalStreamsHandler = options.redirectExternalStreamsHandler;\n      adapterConfig.redirectExternalStreamsTimeout = options.redirectExternalStreamsTimeout;\n    }\n    if (Utils.Object.hasPropertyPath(config, 'abr')) {\n      const abr = config.abr;\n      if (typeof abr.enabled === 'boolean') {\n        adapterConfig.shakaConfig.abr.enabled = abr.enabled;\n      }\n      if (typeof abr.capLevelToPlayerSize === 'boolean') {\n        adapterConfig.capLevelToPlayerSize = abr.capLevelToPlayerSize;\n      }\n      if (abr.defaultBandwidthEstimate) {\n        adapterConfig.shakaConfig.abr.defaultBandwidthEstimate = abr.defaultBandwidthEstimate;\n      }\n      if (abr.restrictions) {\n        Utils.Object.createPropertyPath(adapterConfig, 'abr.restrictions', abr.restrictions);\n      }\n    }\n\n    //Merge shaka config with override config, override takes precedence\n    if (Utils.Object.hasPropertyPath(config, 'playback.options.html5.dash')) {\n      Utils.Object.mergeDeep(adapterConfig.shakaConfig, config.playback.options.html5.dash);\n\n      //for backward compatibility with shaka version < 4\n      if (Utils.Object.hasPropertyPath(adapterConfig.shakaConfig, 'manifest.dash.defaultPresentationDelay')) {\n        adapterConfig.shakaConfig.manifest.defaultPresentationDelay = adapterConfig.shakaConfig.manifest.dash.defaultPresentationDelay;\n        delete adapterConfig.shakaConfig.manifest.dash.defaultPresentationDelay;\n      }\n    }\n    adapterConfig.network = config.network;\n    return new this(videoElement, source, adapterConfig);\n  }\n\n  /**\n   * Checks if dash adapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the dash adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = typeof mimeType === 'string' ? mimeType.toLowerCase() === DashAdapter._dashMimeType && DashAdapter.isMSESupported() : false;\n    DashAdapter._logger.debug('canPlayType result for mimeType: ' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * set 'bitrate' the max bandwidth (if possible)\n   * @param {number} bitrate the max bitrate allowed\n   * @returns {void}\n   */\n  setMaxBitrate(bitrate: number): void {\n    if (this._hasLowerOrEqualBitrate(bitrate)) {\n      this._shaka.configure({abr: {restrictions: {maxBandwidth: bitrate}}});\n    }\n  }\n\n  _getSortedTracks(): Array<Object> {\n    const tracks = this._shaka.getVariantTracks();\n    const sortedTracks = tracks\n      .map(obj => ({\n        id: obj.id,\n        bandwidth: obj.bandwidth,\n        active: obj.active\n      }))\n      .sort((obj1, obj2) => obj1.bandwidth - obj2.bandwidth);\n    return sortedTracks;\n  }\n\n  _hasLowerOrEqualBitrate(maxBitrate: number): boolean {\n    const sortedTracks = this._getSortedTracks();\n    if (sortedTracks[0].bandwidth <= maxBitrate) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if dash adapter can play a given drm data.\n   * @param {Array<Object>} drmData - The drm data to check.\n   * @param {PKDrmConfigObject} drmConfig - The drm config.\n   * @returns {boolean} - Whether the dash adapter can play a specific drm data.\n   * @static\n   */\n  static canPlayDrm(drmData: Array<Object>, drmConfig: PKDrmConfigObject): boolean {\n    DashAdapter._availableDrmProtocol = [];\n    for (let drmProtocol of DashAdapter._drmProtocols) {\n      if (drmProtocol.isConfigured(drmData, drmConfig)) {\n        DashAdapter._availableDrmProtocol.push(drmProtocol);\n        break;\n      }\n    }\n    if (!DashAdapter._availableDrmProtocol.length) {\n      for (let drmProtocol of DashAdapter._drmProtocols) {\n        if (drmProtocol.canPlayDrm(drmData)) {\n          DashAdapter._availableDrmProtocol.push(drmProtocol);\n        }\n      }\n    }\n\n    return !!DashAdapter._availableDrmProtocol.length;\n  }\n\n  /**\n   * Checks if the dash adapter is supported\n   * @function isSupported\n   * @returns {boolean} -  Whether dash is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    /*\n    for browsers which don't have VTT cue we need to install a polyfill for both isBrowserSupported\n    check and also for playback, but we might not use Shaka so if we install the polyfill now just for browser support\n    check then uninstall it after, and call it again if we actually use DASH adapter for playback on init\n    this is in order to avoid collisions with other libs\n     */\n    let resetVttPolyfill = false;\n    if (!window.VTTCue) {\n      resetVttPolyfill = true;\n    }\n    shaka.polyfill.installAll();\n    let isSupported = shaka.Player.isBrowserSupported();\n    if (resetVttPolyfill) {\n      window.VTTCue = undefined;\n    }\n    DashAdapter._logger.debug('isSupported:' + isSupported);\n    return isSupported;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to the dash adapter\n   * @param {PKMediaSourceObject} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: PKMediaSourceObject, config: Object = {}) {\n    DashAdapter._logger.debug('Creating adapter. Shaka version: ' + shaka.Player.version);\n    super(videoElement, source, config);\n    this._config = Utils.Object.mergeDeep({}, DefaultConfig, this._config);\n    this._init();\n  }\n\n  /**\n   * Runs the initialization actions of the dash adapter.\n   * @private\n   * @returns {void}\n   */\n  _init(): void {\n    //Need to call this again cause we are uninstalling the VTTCue polyfill to avoid collisions with other libs\n    shaka.polyfill.installAll();\n    this._shaka = new shaka.Player();\n    // This will force the player to use shaka UITextDisplayer plugin to render text tracks.\n    if (this._config.useShakaTextTrackDisplay) {\n      this._shaka.setVideoContainer(Utils.Dom.getElementBySelector('.playkit-subtitles'));\n    }\n    this._maybeSetFilters();\n    this._maybeSetDrmConfig();\n    this._maybeBreakStalls();\n    this._shaka.configure(this._config.shakaConfig);\n    this._addBindings();\n  }\n\n  _clearStallInterval(): void {\n    if (this._stallInterval) {\n      clearInterval(this._stallInterval);\n      this._stallInterval = null;\n    }\n  }\n\n  _stallHandler(): void {\n    this._clearStallInterval();\n\n    const getCurrentTimeInSeconds = () => {\n      return Date.now() / 1000;\n    };\n    const lastUpdateTime = getCurrentTimeInSeconds();\n    let lastCurrentTime = this._videoElement.currentTime;\n\n    this._stallInterval = setInterval(() => {\n      const stallSeconds = getCurrentTimeInSeconds() - lastUpdateTime;\n      //waiting for 3 sec until checking stalling\n      if (stallSeconds > STALL_DETECTION_THRESHOLD && !this._videoElement.paused) {\n        if (lastCurrentTime === this._videoElement.currentTime) {\n          DashAdapter._logger.debug('stall found, break the stall');\n          this._videoElement.currentTime = parseFloat(this._videoElement.currentTime.toFixed(1)) + STALL_BREAK_THRESHOLD;\n        }\n        this._clearStallInterval();\n      }\n      lastCurrentTime = this._videoElement.currentTime;\n    }, STALL_DETECTION_INTERVAL);\n  }\n\n  /**\n   * register to event to break the stalls on smart TV\n   * @returns {void}\n   * @private\n   */\n  _maybeBreakStalls(): void {\n    if (this._config.forceBreakStall) {\n      this._eventManager.listen(this._videoElement, EventType.SEEKING, () => this._stallHandler());\n    }\n  }\n\n  /**\n   * get the redirected URL\n   * @param {string} url - The url to check for redirection\n   * @returns {Promise<string>} - the resolved url\n   * @private\n   */\n  _maybeGetRedirectedUrl(url: string): Promise<string> {\n    const shouldRedirect = this._config.forceRedirectExternalStreams;\n    const timeout = this._config.redirectExternalStreamsTimeout;\n    const callback = this._config.redirectExternalStreamsHandler;\n    return new Promise(resolve => {\n      if (!shouldRedirect) {\n        return resolve(url);\n      }\n      Utils.Http.jsonp(url, callback, {\n        timeout: timeout\n      })\n        .then(uri => {\n          resolve(uri);\n        })\n        .catch(() => resolve(url));\n    });\n  }\n\n  _maybeSetFilters(): void {\n    if (typeof Utils.Object.getPropertyPath(this._config, 'network.requestFilter') === 'function') {\n      DashAdapter._logger.debug('Register request filter');\n      this._shaka.getNetworkingEngine().registerRequestFilter((type, request) => {\n        if (Object.values(RequestType).includes(type)) {\n          const pkRequest: PKRequestObject = {url: request.uris[0], body: request.body, headers: request.headers};\n          let requestFilterPromise;\n          try {\n            requestFilterPromise = this._config.network.requestFilter(type, pkRequest);\n          } catch (error) {\n            requestFilterPromise = Promise.reject(error);\n          }\n          requestFilterPromise = requestFilterPromise || Promise.resolve(pkRequest);\n          return requestFilterPromise\n            .then(updatedRequest => {\n              request.uris = [updatedRequest.url];\n              request.headers = updatedRequest.headers;\n              if (typeof updatedRequest.withCredentials === 'boolean') {\n                request.allowCrossSiteCredentials = updatedRequest.withCredentials;\n              }\n              if (request.method === 'POST') {\n                request.body = updatedRequest.body;\n              } else if (updatedRequest.body) {\n                DashAdapter._logger.warn(`Request with ${request.method} method cannot have body`);\n              }\n            })\n            .catch(error => {\n              this._requestFilterError = true;\n              throw error;\n            });\n        }\n      });\n    }\n    if (typeof Utils.Object.getPropertyPath(this._config, 'network.responseFilter') === 'function') {\n      DashAdapter._logger.debug('Register response filter');\n      this._shaka.getNetworkingEngine().registerResponseFilter((type, response) => {\n        if (Object.values(RequestType).includes(type)) {\n          const {uri: url, data, headers} = response;\n          const pkResponse: PKResponseObject = {url, originalUrl: this._sourceObj.url, data, headers};\n          let responseFilterPromise;\n          try {\n            responseFilterPromise = this._config.network.responseFilter(type, pkResponse);\n          } catch (error) {\n            responseFilterPromise = Promise.reject(error);\n          }\n          responseFilterPromise = responseFilterPromise || Promise.resolve(pkResponse);\n          return responseFilterPromise\n            .then(updatedResponse => {\n              response.data = updatedResponse.data;\n            })\n            .catch(error => {\n              this._responseFilterError = true;\n              throw error;\n            });\n        }\n      });\n    }\n  }\n\n  /**\n   * Configure drm for shaka player.\n   * @private\n   * @returns {void}\n   */\n  _maybeSetDrmConfig(): void {\n    if (this._sourceObj && this._sourceObj.drmData) {\n      let config = {};\n      for (let drmProtocol of DashAdapter._availableDrmProtocol) {\n        drmProtocol.setDrmPlayback(config, this._sourceObj.drmData);\n        // If shaka config already has some drm configuration override the config defaults with it\n        if (this._config.shakaConfig.drm) {\n          Utils.Object.mergeDeep(config.drm, this._config.shakaConfig.drm);\n        }\n        Utils.Object.mergeDeep(this._config.shakaConfig, config);\n      }\n    }\n  }\n\n  /**\n   * apply Capping to player size restrictions\n   * @private\n   * @returns {void}\n   */\n  _maybeCapLevelToPlayerSize(): void {\n    if (this._config.capLevelToPlayerSize) {\n      const getRestrictions = () => {\n        return {\n          minHeight: 0,\n          maxHeight: this._videoHeight,\n          minWidth: 0,\n          maxWidth: this._videoWidth,\n          minBitrate: 0,\n          maxBitrate: Infinity\n        };\n      };\n      this._clearVideoUpdateTimer();\n      this._videoSizeUpdateTimer = setInterval(() => this._updateRestriction(getRestrictions()), ABR_RESTRICTION_UPDATE_INTERVAL);\n      this._updateRestriction(getRestrictions());\n    }\n  }\n\n  /**\n   * apply ABR restrictions\n   * @private\n   * @returns {void}\n   */\n  _maybeApplyAbrRestrictions(): void {\n    if (!this._config.capLevelToPlayerSize) {\n      this._clearVideoUpdateTimer();\n      if (Utils.Object.hasPropertyPath(this._config, 'abr.restrictions')) {\n        this._updateRestriction(this._config.abr.restrictions);\n      }\n    }\n  }\n\n  /**\n   * apply ABR restrictions by size\n   * @private\n   * @param {PKABRRestrictionObject} restrictions - abr restrictions config\n   * @returns {void}\n   */\n  _updateRestriction(restrictions: PKABRRestrictionObject): void {\n    const shakaRestrictionsConfig = this._getRestrictionShakaConfig(restrictions);\n    this._shaka.configure({\n      abr: {\n        restrictions: shakaRestrictionsConfig\n      }\n    });\n  }\n\n  _getRestrictionShakaConfig(restrictions: PKABRRestrictionObject): Object {\n    const getMinDimensions = (dim): number => {\n      const videoTracks = this._getVideoTracks();\n      return Math.min.apply(\n        null,\n        videoTracks.map(variant => variant[dim])\n      );\n    };\n    let restrictionsShakaConfig = {};\n    if (restrictions) {\n      let {maxHeight, maxWidth, maxBitrate, minHeight, minWidth, minBitrate} = restrictions;\n      const minHeightValue = Math.max(minHeight, 0);\n      const maxHeightValue = Math.max(maxHeight, getMinDimensions('height'));\n      if (maxHeightValue >= minHeightValue) {\n        restrictionsShakaConfig.minHeight = minHeightValue;\n        restrictionsShakaConfig.maxHeight = maxHeightValue;\n      } else {\n        DashAdapter._logger.warn('Invalid maxHeight restriction, maxHeight must be greater than minHeight', minHeight, maxHeight);\n      }\n      const minWidthValue = Math.max(minWidth, 0);\n      const maxWidthValue = Math.max(maxWidth, getMinDimensions('width'));\n      if (maxWidthValue >= minWidthValue) {\n        restrictionsShakaConfig.minWidth = minWidthValue;\n        restrictionsShakaConfig.maxWidth = maxWidthValue;\n      } else {\n        DashAdapter._logger.warn('Invalid maxWidth restriction, maxWidth must be greater than minWidth', minWidth, maxWidth);\n      }\n      const minBitrateValue = Math.max(minBitrate, 0);\n      const maxBitrateValue = Math.max(maxBitrate, getMinDimensions('bandwidth'));\n      if (maxBitrateValue >= minBitrateValue) {\n        restrictionsShakaConfig.minBandwidth = minBitrateValue;\n        restrictionsShakaConfig.maxBandwidth = maxBitrateValue;\n      } else {\n        DashAdapter._logger.warn('Invalid maxBitrate restriction, maxBitrate must be greater than minBitrate', minBitrate, maxBitrate);\n      }\n    }\n    return restrictionsShakaConfig;\n  }\n\n  /**\n   * attach media - return the media source to handle the video tag\n   * @public\n   * @returns {void}\n   */\n  attachMediaSource(): void {\n    if (!this._shaka) {\n      if (this._videoElement && this._videoElement.src) {\n        Utils.Dom.setAttribute(this._videoElement, 'src', '');\n        Utils.Dom.removeAttribute(this._videoElement, 'src');\n      }\n      this._init();\n    }\n  }\n\n  /**\n   * detach media - will remove the media source from handling the video\n   * @public\n   * @returns {Promise<void>} - detach promise\n   */\n  detachMediaSource(): Promise<void> {\n    if (this._shaka) {\n      // 1 second different between duration and current time will signal as end - will enable replay button\n      if (Math.floor(this.duration - this.currentTime) === 0) {\n        this._lastTimeDetach = 0;\n      } else if (this.currentTime > 0) {\n        this._lastTimeDetach = this.currentTime;\n      }\n      return this._reset().then(() => {\n        this._shaka = null;\n        this._loadPromise = null;\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Clear the video update timer\n   * @private\n   * @returns {void}\n   */\n  _clearVideoUpdateTimer(): void {\n    if (this._videoSizeUpdateTimer) {\n      clearInterval(this._videoSizeUpdateTimer);\n      this._videoSizeUpdateTimer = null;\n    }\n  }\n\n  get _videoWidth(): ?number {\n    let width;\n    const videoElement = this._videoElement;\n    if (videoElement) {\n      width = videoElement.width || videoElement.clientWidth || videoElement.offsetWidth;\n      width *= this._contentScaleFactor;\n    }\n    return width;\n  }\n\n  get _videoHeight(): ?number {\n    let height;\n    const videoElement = this._videoElement;\n    if (videoElement) {\n      height = videoElement.height || videoElement.clientHeight || videoElement.offsetHeight;\n      height *= this._contentScaleFactor;\n    }\n    return height;\n  }\n\n  get _contentScaleFactor(): number {\n    let pixelRatio = 1;\n    try {\n      pixelRatio = window.devicePixelRatio;\n    } catch (e) {\n      DashAdapter._logger.debug('failed reading devicePixelRatio, assume 1');\n    }\n    return pixelRatio;\n  }\n\n  /**\n   * Add the required bindings to shaka.\n   * @function _addBindings\n   * @private\n   * @returns {void}\n   */\n  _addBindings(): void {\n    this._eventManager.listen(this._shaka, ShakaEvent.ADAPTATION, this._adapterEventsBindings.adaptation);\n    this._eventManager.listen(this._shaka, ShakaEvent.ERROR, this._adapterEventsBindings.error);\n    this._eventManager.listen(this._shaka, ShakaEvent.DRM_SESSION_UPDATE, this._adapterEventsBindings.drmsessionupdate);\n    this._eventManager.listen(this._videoElement, EventType.WAITING, this._adapterEventsBindings.waiting);\n    this._eventManager.listen(this._videoElement, EventType.PLAYING, this._adapterEventsBindings.playing);\n    this._eventManager.listen(this._videoElement, EventType.LOADED_DATA, () => this._onLoadedData());\n    this._eventManager.listenOnce(this._videoElement, EventType.PLAYING, () => {\n      this._eventManager.listen(this._shaka, ShakaEvent.BUFFERING, this._adapterEventsBindings.buffering);\n    });\n    if (this._config.trackEmsgEvents) {\n      this._eventManager.listen(this._shaka, ShakaEvent.EMSG, this._adapterEventsBindings.emsg);\n    }\n\n    // called when a resource is downloaded\n    this._shaka.getNetworkingEngine().registerResponseFilter((type, response) => {\n      switch (type) {\n        case shaka.net.NetworkingEngine.RequestType.SEGMENT:\n          this._trigger(EventType.FRAG_LOADED, {\n            miliSeconds: response.timeMs,\n            bytes: response.data.byteLength,\n            url: response.uri\n          });\n          if (this.isLive()) {\n            this._dispatchNativeEvent(EventType.DURATION_CHANGE);\n          }\n          break;\n        case shaka.net.NetworkingEngine.RequestType.MANIFEST:\n          this._parseManifest(response.data);\n          this._playbackActualUri = response.uri;\n          this._trigger(EventType.MANIFEST_LOADED, {miliSeconds: response.timeMs});\n          setTimeout(() => {\n            this._isLive = this._isLive || this._shaka?.isLive();\n            if (this._isLive && !this._shaka?.isLive() && !this._isStaticLive) {\n              this._sourceObj.url = response.uri;\n              this._switchFromDynamicToStatic();\n            }\n          });\n          break;\n      }\n    });\n  }\n\n  _onLoadedData(): void {\n    this._setLowLatencyMode();\n    const segmentDuration = this.getSegmentDuration();\n    this._seekRangeStart = this._shaka.seekRange().start;\n    this._startOverTimeout = setTimeout(() => {\n      if (this._shaka.seekRange().start - this._seekRangeStart >= segmentDuration) {\n        // in start over the seekRange().start should be permanent\n        this._isStartOver = false;\n      }\n    }, (segmentDuration + 1) * 1000);\n  }\n\n  _switchFromDynamicToStatic(): void {\n    DashAdapter._logger.debug('Switch from dynamic manifest to static');\n\n    // const videoFullDuration = this._getLiveEdge() - this._seekRangeStart;\n    // const distanceFromLive = videoFullDuration - (this._getLiveEdge() - this._videoElement.currentTime);\n\n    // console.log('>>> current time', this._videoElement.currentTime);\n    // console.log('>>> seek range start', this._shaka.seekRange().start);\n    // console.log('>>> seek range end', this._shaka.seekRange().end);\n    // console.log('>>> seek range duration', videoFullDuration);\n    // console.log('>>> video duration', this._videoElement.duration);\n\n    this._dispatchNativeEvent(EventType.WAITING);\n    const isAdaptiveBitrateEnabled = this.isAdaptiveBitrateEnabled();\n    const paused = this._videoElement.paused;\n    // const {maxHeight} = this._shaka.getConfiguration().abr.restrictions;\n    this.detachMediaSource().then(() => {\n      this._isStaticLive = true;\n      this._isLive = true;\n      this.attachMediaSource();\n      // if (isAdaptiveBitrateEnabled) {\n      //   this._shaka.configure({abr: {restrictions: {maxHeight: 0}}});\n      // }\n      this.load().then(() => {\n        this._videoElement.currentTime = this._videoElement.currentTime - this._seekRangeStart;\n        !paused && this._videoElement.play();\n        if (isAdaptiveBitrateEnabled) {\n          this._onAdaptation();\n          // this._eventManager.listenOnce(this._videoElement, EventType.PLAYING, () => {\n          //   this._shaka.configure({abr: {restrictions: {maxHeight}}});\n          // });\n        } else if (this._selectedVideoTrack) {\n          DashAdapter._logger.debug('Select the selected video track');\n          this.selectVideoTrack(this._selectedVideoTrack);\n        }\n      });\n    });\n  }\n\n  _setLowLatencyMode() {\n    this._shaka.configure({\n      streaming: {\n        lowLatencyMode: typeof this._config.lowLatencyMode === 'boolean' ? this._config.lowLatencyMode : this.isLive()\n      }\n    });\n  }\n\n  /**\n   * Custom parser to retrieve image adaptation sets.\n   * @param {ArrayBuffer} manifestBuffer - The array buffer manifest from the response.\n   * @function _parseManifest\n   * @private\n   * @returns {void}\n   */\n  _parseManifest(manifestBuffer: ArrayBuffer): void {\n    if (!this._manifestParser && DashManifestParser.isValid()) {\n      DashAdapter._logger.debug('Creating parser for the first time');\n      this._manifestParser = new DashManifestParser(manifestBuffer);\n      this._manifestParser.parseManifest();\n    }\n  }\n\n  /**\n   * Load the video source\n   * @param {number} startTime - Optional time to start the video from.\n   * @function load\n   * @override\n   */\n  async load(startTime: ?number): Promise<Object> {\n    if (!this._loadPromise) {\n      await this._removeMediaKeys();\n      this._shaka.attach(this._videoElement);\n      this._loadPromise = new Promise((resolve, reject) => {\n        if (this._sourceObj && this._sourceObj.url) {\n          this._trigger(EventType.ABR_MODE_CHANGED, {mode: this.isAdaptiveBitrateEnabled() ? 'auto' : 'manual'});\n          let shakaStartTime = startTime && startTime > -1 ? startTime : undefined;\n          shakaStartTime = isNaN(this._lastTimeDetach) ? shakaStartTime : this._lastTimeDetach;\n          this._lastTimeDetach = NaN;\n          this._maybeGetRedirectedUrl(this._sourceObj.url)\n            .then(url => {\n              return this._shaka.load(url, shakaStartTime);\n            })\n            .then(() => {\n              const data = {tracks: this._getParsedTracks()};\n              this._maybeCapLevelToPlayerSize();\n              DashAdapter._logger.debug('The source has been loaded successfully');\n              resolve(data);\n            })\n            .catch(error => {\n              reject(new Error(this._isDestroyInProgress ? Error.Severity.RECOVERABLE : error.severity, error.category, error.code, error.data));\n            });\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroys the dash adapter\n   * @function destroy\n   * @override\n   * @returns {Promise<*>} - The destroy promise.\n   */\n  destroy(): Promise<*> {\n    this._isDestroyInProgress = true;\n    return new Promise((resolve, reject) => {\n      super.destroy().then(() => {\n        DashAdapter._logger.debug('destroy');\n        this._loadPromise = null;\n        this._adapterEventsBindings = {};\n        this._reset()\n          .then(resetResult => {\n            this._isDestroyInProgress = false;\n            resolve(resetResult);\n          })\n          .catch(error => {\n            this._isDestroyInProgress = false;\n            reject(error);\n          });\n      });\n    });\n  }\n\n  /**\n   *  Returns in-stream thumbnail for a chosen time.\n   * @param {number} time - playback time.\n   * @public\n   * @return {?ThumbnailInfo} - Thumbnail info\n   */\n  getThumbnail(time: number): ?ThumbnailInfo {\n    if (this._thumbnailController) {\n      return this._thumbnailController.getThumbnail(time);\n    }\n  }\n\n  /**\n   * reset shaka instance and its bindings\n   * @function _reset\n   * @private\n   * @returns {Promise<*>} - The destroy promise.\n   */\n  _reset(): Promise<*> {\n    this._buffering = false;\n    this._waitingSent = false;\n    this._playingSent = false;\n    this._isLive = false;\n    this._isStaticLive = false;\n    this._requestFilterError = false;\n    this._responseFilterError = false;\n    this._manifestParser = null;\n    this._thumbnailController = null;\n    this._clearStallInterval();\n    this._clearVideoUpdateTimer();\n    clearTimeout(this._startOverTimeout);\n    if (this._eventManager) {\n      this._eventManager.removeAll();\n    }\n    if (this._shaka) {\n      return this._shaka.destroy();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Remove mediaKeys from the video element.\n   * mediaKeys are set if an encrypted media was previously played, and must be removed before a new encrypted media can be played.\n   * If mediaKeys are not null it means that shaka reset wasn't called or that it failed to remove them.\n   * @returns {Promise<void>} Promise that resolves when the operation finishes.\n   */\n  async _removeMediaKeys(): Promise<void> {\n    if (this._videoElement && this._videoElement.mediaKeys) {\n      try {\n        DashAdapter._logger.debug('Removing mediaKeys from the video element');\n        await this._videoElement.setMediaKeys(null);\n        DashAdapter._logger.debug('mediaKeys removed');\n      } catch (e) {\n        // non encrypted playback should still work, so we don't reject\n        this._logger.warn('mediaKeys not cleared');\n      } finally {\n        // eslint-disable-next-line no-unsafe-finally\n        return Promise.resolve();\n      }\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Get the original video tracks\n   * @function _getVideoTracks\n   * @returns {Array<Object>} - The original video tracks\n   * @private\n   */\n  _getVideoTracks(): Array<Object> {\n    let variantTracks = this._shaka.getVariantTracks();\n    let activeVariantTrack = this._getActiveTrack();\n    let videoTracks = variantTracks.filter(variantTrack => {\n      return variantTrack.audioId === activeVariantTrack.audioId;\n    });\n    return videoTracks;\n  }\n\n  _getActiveTrack(): Object {\n    return this._shaka.getVariantTracks().find(variantTrack => variantTrack.active);\n  }\n\n  /**\n   * Get the original audio tracks\n   * @function _getAudioTracks\n   * @returns {Array<Object>} - Array of objects with unique language and label.\n   * @private\n   */\n  _getAudioTracks(): Array<Object> {\n    const variantTracks = this._shaka.getVariantTracks();\n    let audioTracks = this._shaka.getAudioLanguagesAndRoles();\n    audioTracks.forEach(track => {\n      const sameLangAudioVariants = variantTracks.filter(vt => vt.language === track.language);\n      const id = sameLangAudioVariants.map(variant => variant.id).join('_');\n      const active = sameLangAudioVariants.some(variant => variant.active);\n      track.id = id;\n      track.label = sameLangAudioVariants[0].label;\n      track.active = active;\n    });\n    return audioTracks;\n  }\n\n  /**\n   * Get the parsed tracks\n   * @function _getParsedTracks\n   * @returns {Array<Track>} - The parsed tracks\n   * @private\n   */\n  _getParsedTracks(): Array<Track> {\n    if (this._shaka) {\n      const videoTracks = this._getParsedVideoTracks();\n      const audioTracks = this._getParsedAudioTracks();\n      const textTracks = this._getParsedTextTracks();\n      const imageTracks = this._getParsedImageTracks();\n      return videoTracks.concat(audioTracks).concat(textTracks).concat(imageTracks);\n    }\n    return [];\n  }\n\n  /**\n   * Get the parsed video tracks\n   * @function _getParsedVideoTracks\n   * @returns {Array<VideoTrack>} - The parsed video tracks\n   * @private\n   */\n  _getParsedVideoTracks(): Array<VideoTrack> {\n    let videoTracks = this._getVideoTracks();\n    let parsedTracks = [];\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        let settings = {\n          id: videoTracks[i].id,\n          bandwidth: videoTracks[i].videoBandwidth || videoTracks[i].bandwidth,\n          width: videoTracks[i].width,\n          height: videoTracks[i].height,\n          active: videoTracks[i].active,\n          index: i\n        };\n        parsedTracks.push(new VideoTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed audio tracks\n   * @function _getParsedAudioTracks\n   * @returns {Array<AudioTrack>} - The parsed audio tracks\n   * @private\n   */\n  _getParsedAudioTracks(): Array<AudioTrack> {\n    let audioTracks = this._getAudioTracks();\n    let parsedTracks = [];\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        let settings = {\n          id: audioTracks[i].id,\n          active: audioTracks[i].active,\n          label: audioTracks[i].label,\n          language: audioTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new AudioTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed text tracks\n   * @function _getParsedTextTracks\n   * @returns {Array<TextTrack>} - The parsed text tracks\n   * @private\n   */\n  _getParsedTextTracks(): Array<TextTrack> {\n    let parsedTracks = [];\n    for (const textTrack of this._shaka.getTextTracks()) {\n      let kind = textTrack.kind ? textTrack.kind + 's' : '';\n      kind = kind === '' && this._config.useShakaTextTrackDisplay ? 'captions' : kind;\n      let settings = {\n        id: textTrack.id,\n        kind: kind,\n        active: false,\n        label: textTrack.label,\n        language: textTrack.language\n      };\n      parsedTracks.push(new TextTrack(settings));\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed image tracks\n   * @function _getParsedImageTracks\n   * @returns {Array<ImageTrack>} - The parsed image tracks\n   * @private\n   */\n  _getParsedImageTracks(): Array<ImageTrack> {\n    const imageSet = this._manifestParser?.getImageSet();\n    const mediaTemplatePrefix = this._manifestParser?.getBaseUrl() || '';\n    if (imageSet) {\n      this._thumbnailController = new DashThumbnailController(imageSet, this._playbackActualUri, mediaTemplatePrefix);\n      return this._thumbnailController.getTracks();\n    }\n    return [];\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the video track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._shaka) {\n      let videoTracks = this._getVideoTracks();\n      if (videoTrack instanceof VideoTrack && videoTracks) {\n        let selectedVideoTrack = videoTracks[videoTrack.index];\n        if (selectedVideoTrack) {\n          if (this.isAdaptiveBitrateEnabled()) {\n            this._shaka.configure({abr: {enabled: false}});\n            this._trigger(EventType.ABR_MODE_CHANGED, {mode: 'manual'});\n          }\n          if (!selectedVideoTrack.active) {\n            this._selectedVideoTrack = videoTrack;\n            this._shaka.selectVariantTrack(videoTracks[videoTrack.index], true);\n            this._onTrackChanged(videoTrack);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._shaka && audioTrack instanceof AudioTrack && !audioTrack.active) {\n      this._shaka.selectAudioLanguage(audioTrack.language);\n      this._onTrackChanged(audioTrack);\n    }\n  }\n\n  /**\n   * Select a text track\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (this._shaka && textTrack instanceof TextTrack && !textTrack.active && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions')) {\n      this._shaka.setTextTrackVisibility(this._config.textTrackVisibile);\n      this._shaka.selectTextLanguage(textTrack.language);\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  selectImageTrack(imageTrack: ImageTrack): void {\n    if (this._shaka && this._thumbnailController && imageTrack instanceof ImageTrack && !imageTrack.active) {\n      this._thumbnailController.selectTrack(imageTrack);\n      this._onTrackChanged(ImageTrack);\n    }\n  }\n\n  /**\n   * Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    if (this._shaka) {\n      this._shaka.setTextTrackVisibility(false);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._shaka && !this.isAdaptiveBitrateEnabled()) {\n      this._trigger(EventType.ABR_MODE_CHANGED, {mode: 'auto'});\n      this._shaka.configure({abr: {enabled: true}});\n    }\n  }\n\n  /**\n   * Checking if adaptive bitrate switching is enabled.\n   * @function isAdaptiveBitrateEnabled\n   * @returns {boolean} - Whether adaptive bitrate is enabled.\n   * @public\n   */\n  isAdaptiveBitrateEnabled(): boolean {\n    if (this._shaka) {\n      let shakaConfig = this._shaka.getConfiguration();\n      return shakaConfig.abr.enabled;\n    }\n    return false;\n  }\n\n  /**\n   * Apply ABR restriction.\n   * @function applyABRRestriction\n   * @param {PKABRRestrictionObject} restrictions - abr restrictions config\n   * @returns {void}\n   * @public\n   */\n  applyABRRestriction(restrictions: PKABRRestrictionObject): void {\n    Utils.Object.createPropertyPath(this._config, 'abr.restrictions', restrictions);\n    this._maybeApplyAbrRestrictions();\n    if (!this.isAdaptiveBitrateEnabled()) {\n      const videoTracks = this._getParsedVideoTracks();\n      const availableTracks = filterTracksByRestriction(videoTracks, this._config.abr.restrictions);\n      if (availableTracks.length) {\n        const activeTrackInRange = availableTracks.find(track => track.active);\n        if (!activeTrackInRange) {\n          this.selectVideoTrack(availableTracks[0]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the live edge\n   * @returns {number} - live edge\n   * @private\n   */\n  _getLiveEdge(): number {\n    return this._shaka ? this._shaka.seekRange().end : NaN;\n  }\n\n  /**\n   * Seeking to live edge.\n   * @function seekToLiveEdge\n   * @returns {void}\n   * @public\n   */\n  seekToLiveEdge(): void {\n    if (this._shaka && this._videoElement.readyState > 0) {\n      this._videoElement.currentTime = this._getLiveEdge();\n    }\n  }\n\n  /**\n   * Checking if the current playback is live.\n   * @function isLive\n   * @returns {boolean} - Whether playback is live.\n   * @public\n   */\n  isLive(): boolean {\n    return this._shaka?.isLive() || this._isLive;\n  }\n\n  /**\n   * Gets the segment duration of the stream\n   * @return {number} - Segment duration in seconds\n   */\n  get liveDuration() {\n    return this._getLiveEdge();\n  }\n\n  /**\n   * Gets the live duration\n   * @return {number} - live duration\n   */\n  getSegmentDuration(): number {\n    if (this._shaka) {\n      return this._shaka.getStats().maxSegmentDuration;\n    }\n    return 0;\n  }\n\n  /**\n   * An handler to shaka adaptation event\n   * @function _onAdaptation\n   * @returns {void}\n   * @private\n   */\n  _onAdaptation(): void {\n    let selectedVideoTrack = this._getParsedVideoTracks().find(videoTrack => videoTrack.active);\n    this._onTrackChanged(selectedVideoTrack);\n  }\n\n  /**\n   * An handler to shaka error event\n   * @function _onError\n   * @param {any} event - the error event\n   * @returns {void}\n   * @private\n   */\n  _onError(event: any): void {\n    if (event && event.detail) {\n      let error = event.detail;\n      //don't handle video element errors, they are already handled by the player\n      if (error.code === this.VIDEO_ERROR_CODE) {\n        return;\n      }\n      if ((this._requestFilterError || this._responseFilterError) && error.data[0] instanceof shaka.util.Error) {\n        // When the request/response filter of the license request throws an error,\n        // shaka wraps the request/response filter error (code 1006/1007) with a license request error (code 6007)\n        // so extract the inner error\n        error = error.data[0];\n        this._requestFilterError ? (this._requestFilterError = false) : (this._responseFilterError = false);\n      }\n      this._trigger(EventType.ERROR, new Error(error.severity, error.category, error.code, error.data));\n      DashAdapter._logger.error(error);\n      if (error.severity === Error.Severity.CRITICAL) {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * An handler to shaka buffering event\n   * @function _onBuffering\n   * @param {any} event - the buffering event\n   * @returns {void}\n   * @private\n   */\n  _onBuffering(event: any): void {\n    if (event.buffering) {\n      if (!this._waitingSent) {\n        // The player enters the buffering state and 'waiting' event hasn't been sent by the HTMLVideoElement.\n        this._dispatchNativeEvent(EventType.WAITING);\n        this._buffering = true;\n      }\n    } else {\n      this._buffering = false;\n      if (!this._videoElement.paused && !this._playingSent) {\n        //the player leaves the buffering state. and 'playing' event hasn't been sent by the HTMLVideoElement.\n        this._dispatchNativeEvent(EventType.PLAYING);\n      }\n    }\n  }\n\n  _dispatchNativeEvent(type: string): void {\n    let event;\n    if (typeof window.Event === 'function') {\n      event = new Event(type);\n    } else {\n      event = document.createEvent('Event');\n      event.initEvent(type, true, true);\n    }\n    this._videoElement.dispatchEvent(event);\n  }\n\n  /**\n   * An handler to shaka drm session update event\n   * @function _onDrmSessionUpdate\n   * @returns {void}\n   * @private\n   */\n  _onDrmSessionUpdate(): void {\n    this._trigger(EventType.DRM_LICENSE_LOADED, {\n      licenseTime: this._shaka.getStats().licenseTime,\n      scheme: this._shaka.drmInfo().keySystem\n    });\n  }\n\n  /**\n   * An handler to shaka emsg event\n   * @function _onEmsg\n   * @param {any} event - the emsg event\n   * @returns {void}\n   * @private\n   */\n  _onEmsg(event: any): void {\n    const {detail, type} = event;\n    let metadataTrack = Array.from(this._videoElement.textTracks).find(track => track.label === type);\n    if (!metadataTrack) {\n      metadataTrack = this._videoElement.addTextTrack(TextTrack.KIND.METADATA, type);\n    }\n    const {startTime, endTime, id, ...metadata} = detail;\n\n    const timedMetadata = new TimedMetadata(startTime, endTime, id, TimedMetadata.TYPE.EMSG, metadata);\n    const textTrackCue = createTextTrackCue(timedMetadata);\n    metadataTrack.addCue(textTrackCue);\n    this._trigger(EventType.TIMED_METADATA_ADDED, {cues: [timedMetadata]});\n  }\n\n  /**\n   * An handler to HTMLVideoElement waiting event\n   * @function _onWaiting\n   * @returns {void}\n   * @private\n   */\n  _onWaiting(): void {\n    this._waitingSent = true;\n    this._playingSent = false;\n  }\n\n  /**\n   * An handler to HTMLVideoElement playing event\n   * @function _onPlaying\n   * @returns {void}\n   * @private\n   */\n  _onPlaying(): void {\n    this._playingSent = true;\n    this._waitingSent = false;\n    if (this._buffering) {\n      // The player is in buffering state.\n      this._dispatchNativeEvent(EventType.WAITING);\n    }\n  }\n\n  /**\n   * Get the start time of DVR window in live playback in seconds.\n   * @returns {Number} - start time of DVR window.\n   * @public\n   */\n  getStartTimeOfDvrWindow(): number {\n    if (this.isLive() && this._shaka) {\n      return (this._isStartOver ? this._seekRangeStart : this._shaka.seekRange().start) + this._shaka.getConfiguration().streaming.safeSeekOffset;\n    }\n    return 0;\n  }\n\n  /**\n   * gets the target buffer of the player\n   * @returns {number} - buffer length target in seconds\n   */\n  get targetBuffer(): number {\n    let targetBufferVal = NaN;\n    if (!this._shaka) return NaN;\n    if (this.isLive()) {\n      targetBufferVal = this._getLiveEdge() - this._videoElement.currentTime;\n    } else {\n      // consideration of the end of the playback in the target buffer calc\n      targetBufferVal = this._videoElement.duration - this._videoElement.currentTime;\n    }\n\n    targetBufferVal = Math.min(targetBufferVal, this._shaka.getConfiguration().streaming.bufferingGoal + this._shaka.getStats().maxSegmentDuration);\n    return targetBufferVal;\n  }\n\n  getDrmInfo(): ?PKDrmDataObject {\n    const drmInfo = this._shaka.drmInfo();\n    if (!drmInfo) {\n      return null;\n    } else {\n      const {licenseServerUri, keySystem, serverCertificateUri} = drmInfo;\n      const drmDataObject: PKDrmDataObject = {\n        licenseUrl: licenseServerUri,\n        scheme: keySystem\n      };\n      if (serverCertificateUri) drmDataObject.certificate = serverCertificateUri;\n      return drmDataObject;\n    }\n  }\n}\n","// @flow\nimport {registerMediaSourceAdapter} from '@playkit-js/playkit-js';\nimport DashAdapter from './dash-adapter';\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst VERSION = __VERSION__;\nconst NAME = __NAME__;\n\nexport default DashAdapter;\nexport {VERSION, NAME};\n\n// Register DashAdapter to the media source adapter manager\nif (DashAdapter.isSupported()) {\n  registerMediaSourceAdapter(DashAdapter);\n}\n"],"sourceRoot":""}