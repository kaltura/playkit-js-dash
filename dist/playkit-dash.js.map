{"version":3,"sources":["webpack:///dash/webpack/universalModuleDefinition","webpack:///dash/webpack/bootstrap 2c4222c83dc060af6f2a","webpack:///dash/./dash-adapter.js","webpack:///dash/external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}","webpack:///dash/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":\"Playkit\"}"],"names":["DashAdapter","videoElement","source","config","playback","options","html5","dash","mimeType","canPlayType","toLowerCase","_dashMimeType","_logger","debug","toString","polyfill","installAll","isSupported","Player","isBrowserSupported","version","_shaka","configure","_addBindings","addEventListener","_onAdaptation","bind","_onError","removeEventListener","_loadPromise","Promise","resolve","reject","_sourceObj","url","load","then","data","tracks","_getParsedTracks","catch","error","_removeBindings","destroy","variantTracks","getVariantTracks","activeVariantTrack","filter","variantTrack","active","videoTracks","audioId","audioTracks","videoId","_getParsedVideoTracks","_getParsedAudioTracks","textTracks","_getParsedTextTracks","concat","_getVideoTracks","parsedTracks","i","length","settings","id","bandwidth","label","index","push","_getAudioTracks","language","getTextTracks","kind","videoTrack","selectedVideoTrack","abr","enabled","selectVariantTrack","_onTrackChanged","audioTrack","selectAudioLanguage","textTrack","selectTextLanguage","setTextTrackVisibility","getLogger"],"mappings":"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","file":"playkit-dash.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"shaka-player\"), require(\"playkit-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"shaka-player\", \"playkit-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlaykitJsDash\"] = factory(require(\"shaka-player\"), require(\"playkit-js\"));\n\telse\n\t\troot[\"PlaykitJsDash\"] = factory(root[\"shaka\"], root[\"Playkit\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2c4222c83dc060af6f2a","// @flow\nimport shaka from 'shaka-player';\nimport {registerMediaSourceAdapter, BaseMediaSourceAdapter} from 'playkit-js'\nimport {Track, VideoTrack, AudioTrack, TextTrack} from 'playkit-js'\n\n/**\n * Adapter of shaka lib for dash content\n * @classdesc\n */\nexport default class DashAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of Adapter\n   * @member {string} id\n   * @static\n   * @public\n   */\n  static id = 'DashAdapter';\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(DashAdapter.id);\n  /**\n   * The supported mime type by the dash adapter\n   * @member {string} _dashMimeType\n   * @static\n   * @private\n   */\n  static _dashMimeType = 'application/dash+xml';\n  /**\n   * The shaka player instance\n   * @member {any} _shaka\n   * @private\n   */\n  _shaka: any;\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {Object} source - The source Object.\n   * @param {Object} config - The player configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): IMediaSourceAdapter {\n    return new this(videoElement, source, config.playback.options.html5.dash);\n  }\n\n  /**\n   * Checks if dash adapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the dash adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = typeof mimeType === 'string' ? mimeType.toLowerCase() === DashAdapter._dashMimeType : false;\n    DashAdapter._logger.debug('canPlayType result for mimeType: ' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * Checks if the dash adapter is supported\n   * @function isSupported\n   * @returns {boolean} -  Whether dash is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    shaka.polyfill.installAll();\n    let isSupported = shaka.Player.isBrowserSupported();\n    DashAdapter._logger.debug('isSupported:' + isSupported);\n    return isSupported;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to the dash adapter\n   * @param {Object} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: Object, config: Object = {}) {\n    DashAdapter._logger.debug('Creating adapter. Shaka version: ' + shaka.Player.version);\n    super(videoElement, source, config);\n    this._shaka = new shaka.Player(videoElement);\n    this._shaka.configure(config);\n    this._addBindings();\n  }\n\n  /**\n   * Add the required bindings to shaka.\n   * @function _addBindings\n   * @private\n   * @returns {void}\n   */\n  _addBindings(): void {\n    this._shaka.addEventListener('adaptation', this._onAdaptation.bind(this));\n    this._shaka.addEventListener('error', this._onError.bind(this));\n  }\n\n  /**\n   * Remove the bindings to shaka.\n   * @function _removeBindings\n   * @private\n   * @returns {void}\n   */\n  _removeBindings(): void {\n    this._shaka.removeEventListener('adaptation', this._onAdaptation);\n    this._shaka.removeEventListener('error', this._onError);\n  }\n\n  /**\n   * Load the video source\n   * @function load\n   * @override\n   */\n  load(): Promise<Object> {\n    if (!this._loadPromise) {\n      this._loadPromise = new Promise((resolve, reject) => {\n        if (this._sourceObj && this._sourceObj.url) {\n          this._shaka.load(this._sourceObj.url).then(() => {\n            let data = {tracks: this._getParsedTracks()};\n            DashAdapter._logger.debug('The source has been loaded successfully');\n            resolve(data);\n          }).catch((error) => {\n            reject(error);\n            this._onError(error);\n          });\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroying the dash adapter\n   * @function destroy\n   * @override\n   */\n  destroy(): void {\n    DashAdapter._logger.debug('destroy');\n    super.destroy();\n    this._loadPromise = null;\n    this._removeBindings();\n    this._shaka.destroy();\n  }\n\n  /**\n   * Get the original video tracks\n   * @function _getVideoTracks\n   * @returns {Array<Object>} - The original video tracks\n   * @private\n   */\n  _getVideoTracks(): Array<Object> {\n    let variantTracks = this._shaka.getVariantTracks();\n    let activeVariantTrack = variantTracks.filter((variantTrack) => {\n      return variantTrack.active;\n    })[0];\n    let videoTracks = variantTracks.filter((variantTrack) => {\n      return variantTrack.audioId === activeVariantTrack.audioId;\n    });\n    return videoTracks;\n  }\n\n  /**\n   * Get the original audio tracks\n   * @function _getAudioTracks\n   * @returns {Array<Object>} - The original audio tracks\n   * @private\n   */\n  _getAudioTracks(): Array<Object> {\n    let variantTracks = this._shaka.getVariantTracks();\n    let activeVariantTrack = variantTracks.filter((variantTrack) => {\n      return variantTrack.active;\n    })[0];\n    let audioTracks = variantTracks.filter((variantTrack) => {\n      return variantTrack.videoId === activeVariantTrack.videoId;\n    });\n    return audioTracks;\n  }\n\n  /**\n   * Get the parsed tracks\n   * @function _getParsedTracks\n   * @returns {Array<Track>} - The parsed tracks\n   * @private\n   */\n  _getParsedTracks(): Array<Track> {\n    let videoTracks = this._getParsedVideoTracks();\n    let audioTracks = this._getParsedAudioTracks();\n    let textTracks = this._getParsedTextTracks();\n    return videoTracks.concat(audioTracks).concat(textTracks);\n  }\n\n  /**\n   * Get the parsed video tracks\n   * @function _getParsedVideoTracks\n   * @returns {Array<VideoTrack>} - The parsed video tracks\n   * @private\n   */\n  _getParsedVideoTracks(): Array<VideoTrack> {\n    let videoTracks = this._getVideoTracks();\n    let parsedTracks = [];\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        let settings = {\n          id: videoTracks[i].id,\n          bandwidth: videoTracks[i].bandwidth,\n          active: videoTracks[i].active,\n          label: videoTracks[i].label,\n          index: i\n        };\n        parsedTracks.push(new VideoTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed audio tracks\n   * @function _getParsedAudioTracks\n   * @returns {Array<AudioTrack>} - The parsed audio tracks\n   * @private\n   */\n  _getParsedAudioTracks(): Array<AudioTrack> {\n    let audioTracks = this._getAudioTracks();\n    let parsedTracks = [];\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        let settings = {\n          id: audioTracks[i].id,\n          active: audioTracks[i].active,\n          label: audioTracks[i].label,\n          language: audioTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new AudioTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed text tracks\n   * @function _getParsedTextTracks\n   * @returns {Array<TextTrack>} - The parsed text tracks\n   * @private\n   */\n  _getParsedTextTracks(): Array<TextTrack> {\n    let textTracks = this._shaka.getTextTracks();\n    let parsedTracks = [];\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        let settings = {\n          kind: textTracks[i].kind ? textTracks[i].kind + 's' : \"\",\n          active: textTracks[i].active,\n          label: textTracks[i].label,\n          language: textTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new TextTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the video track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    let videoTracks = this._getVideoTracks();\n    if ((videoTrack instanceof VideoTrack) && videoTracks) {\n      let selectedVideoTrack = videoTracks[videoTrack.index];\n      if (selectedVideoTrack) {\n        this._shaka.configure({abr: {enabled: false}});\n        if (!selectedVideoTrack.active) {\n          this._shaka.selectVariantTrack(videoTracks[videoTrack.index], true);\n          this._onTrackChanged(videoTrack);\n        }\n      }\n    }\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if ((audioTrack instanceof AudioTrack) && !audioTrack.active) {\n      this._shaka.selectAudioLanguage(audioTrack.language);\n      this._onTrackChanged(audioTrack);\n    }\n  }\n\n  /**\n   * Select a text track\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if ((textTrack instanceof TextTrack) && !textTrack.active && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions')) {\n      this._shaka.selectTextLanguage(textTrack.language);\n      this._shaka.setTextTrackVisibility(true);\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /**\n   * Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    this._shaka.setTextTrackVisibility(false);\n  }\n\n  /**\n   * Enables adaptive bitrate switching\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    this._shaka.configure({abr: {enabled: true}});\n  }\n\n  /**\n   * An handler to shaka adaptation event\n   * @function _onAdaptation\n   * @returns {void}\n   * @private\n   */\n  _onAdaptation(): void {\n    let selectedVideoTrack = this._getParsedVideoTracks().filter(function (videoTrack) {\n      return videoTrack.active;\n    })[0];\n    this._onTrackChanged(selectedVideoTrack);\n  }\n\n  /**\n   * An handler to shaka error event\n   * @function _onError\n   * @param {any} error - the error\n   * @returns {void}\n   * @private\n   */\n  _onError(error: any): void {\n    DashAdapter._logger.error(error);\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * In case the adapter preformed a load it will return the manifest url.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    if (this._loadPromise && this._sourceObj) {\n      return this._sourceObj.url;\n    }\n    return \"\";\n  }\n}\n\n// Register DashAdapter to the media source adapter manager\nif (DashAdapter.isSupported()) {\n  registerMediaSourceAdapter(DashAdapter);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./dash-adapter.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":\"Playkit\"}\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}