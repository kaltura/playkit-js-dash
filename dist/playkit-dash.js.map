{"version":3,"sources":["./dash/webpack/universalModuleDefinition","./dash/webpack/bootstrap 7d71d8d1bed0a3fcf5fe","./dash/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":\"Playkit\"}","./dash/./dash-adapter.js","./dash/external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}","./dash/./drm/widevine.js","./dash/./drm/playready.js"],"names":["DashAdapter","videoElement","source","config","dashConfig","Object","hasPropertyPath","playback","options","html5","dash","mimeType","canPlayType","toLowerCase","_dashMimeType","_logger","debug","toString","drmData","canPlayDrm","_drmProtocols","drmProtocol","_drmProtocol","resetVttPolyfill","window","VTTCue","polyfill","installAll","isSupported","Player","isBrowserSupported","undefined","version","_shaka","_videoElement","_maybeSetDrmConfig","configure","_config","setTextTrackVisibility","_addBindings","_sourceObj","setDrmPlayback","addEventListener","_onAdaptation","bind","_onError","removeEventListener","startTime","_loadPromise","_init","Promise","resolve","reject","url","_trigger","CustomEvents","ABR_MODE_CHANGED","mode","isAdaptiveBitrateEnabled","load","then","data","tracks","_getParsedTracks","catch","error","_removeBindings","destroy","variantTracks","getVariantTracks","activeVariantTrack","filter","variantTrack","active","videoTracks","audioId","audioTracks","videoId","_getParsedVideoTracks","_getParsedAudioTracks","textTracks","_getParsedTextTracks","concat","_getVideoTracks","parsedTracks","i","length","settings","id","bandwidth","width","height","label","index","push","_getAudioTracks","language","getTextTracks","kind","videoTrack","selectedVideoTrack","abr","enabled","selectVariantTrack","_onTrackChanged","audioTrack","selectAudioLanguage","textTrack","selectTextLanguage","shakaConfig","getConfiguration","currentTime","seekRange","end","isLive","start","to","getLogger","DrmSupport","DrmScheme","Widevine","WIDEVINE","isProtocolSupported","browser","name","wwDrmEntry","find","drmEntry","scheme","drm","servers","licenseUrl","advanced","PlayReady","PLAYREADY","prDrmEntry"],"mappings":"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","file":"playkit-dash.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"), require(\"shaka-player\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\", \"shaka-player\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlaykitJsDash\"] = factory(require(\"playkit-js\"), require(\"shaka-player\"));\n\telse\n\t\troot[\"PlaykitJsDash\"] = factory(root[\"Playkit\"], root[\"shaka\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7d71d8d1bed0a3fcf5fe","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":\"Playkit\"}\n// module id = 0\n// module chunks = 0","// @flow\nimport shaka from 'shaka-player';\nimport {registerMediaSourceAdapter, BaseMediaSourceAdapter} from 'playkit-js'\nimport {Track, VideoTrack, AudioTrack, TextTrack} from 'playkit-js'\nimport {Utils} from 'playkit-js'\nimport Widevine from './drm/widevine'\nimport PlayReady from './drm/playready'\n\n/**\n * Adapter of shaka lib for dash content\n * @classdesc\n */\nexport default class DashAdapter extends BaseMediaSourceAdapter {\n  /**\n   * The id of Adapter\n   * @member {string} id\n   * @static\n   * @public\n   */\n  static id = 'DashAdapter';\n  /**\n   * The adapter logger\n   * @member {any} _logger\n   * @private\n   * @static\n   */\n  static _logger = BaseMediaSourceAdapter.getLogger(DashAdapter.id);\n  /**\n   * The supported mime type by the dash adapter\n   * @member {string} _dashMimeType\n   * @static\n   * @private\n   */\n  static _dashMimeType = 'application/dash+xml';\n  /**\n   * The DRM protocols implementations for dash adapter.\n   * @type {Array<Function>}\n   * @private\n   * @static\n   */\n  static _drmProtocols: Array<Function> = [Widevine, PlayReady];\n  /**\n   * The DRM protocol for the current playback.\n   * @type {?Function}\n   * @private\n   * @static\n   */\n  static _drmProtocol: ?Function = null;\n  /**\n   * The shaka player instance\n   * @member {any} _shaka\n   * @private\n   */\n  _shaka: any;\n  /**\n   * The load promise\n   * @member {Promise<Object>} - _loadPromise\n   * @type {Promise<Object>}\n   * @private\n   */\n  _loadPromise: ?Promise<Object>;\n\n  /**\n   * Factory method to create media source adapter.\n   * @function createAdapter\n   * @param {HTMLVideoElement} videoElement - The video element that the media source adapter work with.\n   * @param {Object} source - The source Object.\n   * @param {Object} config - The player configuration.\n   * @returns {IMediaSourceAdapter} - New instance of the run time media source adapter.\n   * @static\n   */\n  static createAdapter(videoElement: HTMLVideoElement, source: Source, config: Object): IMediaSourceAdapter {\n    let dashConfig = {};\n    if (Utils.Object.hasPropertyPath(config, 'playback.options.html5.dash')) {\n      dashConfig = config.playback.options.html5.dash;\n    }\n    return new this(videoElement, source, dashConfig);\n  }\n\n  /**\n   * Checks if dash adapter can play a given mime type\n   * @function canPlayType\n   * @param {string} mimeType - The mime type to check\n   * @returns {boolean} - Whether the dash adapter can play a specific mime type\n   * @static\n   */\n  static canPlayType(mimeType: string): boolean {\n    let canPlayType = typeof mimeType === 'string' ? mimeType.toLowerCase() === DashAdapter._dashMimeType : false;\n    DashAdapter._logger.debug('canPlayType result for mimeType: ' + mimeType + ' is ' + canPlayType.toString());\n    return canPlayType;\n  }\n\n  /**\n   * Checks if dash adapter can play a given drm data.\n   * @param {Array<Object>} drmData - The drm data to check.\n   * @returns {boolean} - Whether the dash adapter can play a specific drm data.\n   * @static\n   */\n  static canPlayDrm(drmData: Array<Object>): boolean {\n    let canPlayDrm = false;\n    for (let drmProtocol of DashAdapter._drmProtocols) {\n      if (drmProtocol.canPlayDrm(drmData)) {\n        DashAdapter._drmProtocol = drmProtocol;\n        canPlayDrm = true;\n        break;\n      }\n    }\n    DashAdapter._logger.debug('canPlayDrm result is ' + canPlayDrm.toString(), drmData);\n    return canPlayDrm;\n  }\n\n  /**\n   * Checks if the dash adapter is supported\n   * @function isSupported\n   * @returns {boolean} -  Whether dash is supported.\n   * @static\n   */\n  static isSupported(): boolean {\n    /*\n    for browsers which don't have VTT cue we need to install a polyfill for both isBrowserSupported\n    check and also for playback, but we might not use Shaka so if we install the polyfill now just for browser support\n    check then uninstall it after, and call it again if we actually use DASH adapter for playback on init\n    this is in order to avoid collisions with other libs\n     */\n    let resetVttPolyfill = false;\n    if (!window.VTTCue) {\n      resetVttPolyfill = true;\n    }\n    shaka.polyfill.installAll();\n    let isSupported = shaka.Player.isBrowserSupported();\n    if (resetVttPolyfill){\n      window.VTTCue = undefined;\n    }\n    DashAdapter._logger.debug('isSupported:' + isSupported);\n    return isSupported;\n  }\n\n  /**\n   * @constructor\n   * @param {HTMLVideoElement} videoElement - The video element which bind to the dash adapter\n   * @param {Object} source - The source object\n   * @param {Object} config - The media source adapter configuration\n   */\n  constructor(videoElement: HTMLVideoElement, source: Object, config: Object = {}) {\n    DashAdapter._logger.debug('Creating adapter. Shaka version: ' + shaka.Player.version);\n    super(videoElement, source, config);\n\n  }\n\n  /**\n   * Runs the initialization actions of the dash adapter.\n   * @private\n   * @returns {void}\n   */\n  _init(): void {\n    //Need to call this again cause we are uninstalling the VTTCue polyfill to avoid collisions with other libs\n    shaka.polyfill.installAll();\n    this._shaka = new shaka.Player(this._videoElement);\n    this._maybeSetDrmConfig();\n    this._shaka.configure(this._config);\n    this._shaka.setTextTrackVisibility(false);\n    this._addBindings();\n  }\n\n  /**\n   * Configure drm for shaka player.\n   * @private\n   * @returns {void}\n   */\n  _maybeSetDrmConfig(): void {\n    if (DashAdapter._drmProtocol && this._sourceObj && this._sourceObj.drmData) {\n      DashAdapter._drmProtocol.setDrmPlayback(this._config, this._sourceObj.drmData);\n    }\n  }\n\n  /**\n   * Add the required bindings to shaka.\n   * @function _addBindings\n   * @private\n   * @returns {void}\n   */\n  _addBindings(): void {\n    this._shaka.addEventListener('adaptation', this._onAdaptation.bind(this));\n    this._shaka.addEventListener('error', this._onError.bind(this));\n  }\n\n  /**\n   * Remove the bindings to shaka.\n   * @function _removeBindings\n   * @private\n   * @returns {void}\n   */\n  _removeBindings(): void {\n    this._shaka.removeEventListener('adaptation', this._onAdaptation);\n    this._shaka.removeEventListener('error', this._onError);\n  }\n\n  /**\n   * Load the video source\n   * @param {number} startTime - Optional time to start the video from.\n   * @function load\n   * @override\n   */\n  load(startTime: ?number): Promise<Object> {\n    if (!this._loadPromise) {\n      this._init();\n      this._loadPromise = new Promise((resolve, reject) => {\n        if (this._sourceObj && this._sourceObj.url) {\n          this._trigger(BaseMediaSourceAdapter.CustomEvents.ABR_MODE_CHANGED, {mode: this.isAdaptiveBitrateEnabled() ? 'auto' : 'manual'});\n          this._shaka.load(this._sourceObj.url, startTime).then(() => {\n            let data = {tracks: this._getParsedTracks()};\n            DashAdapter._logger.debug('The source has been loaded successfully');\n            resolve(data);\n          }).catch((error) => {\n            reject(error);\n            this._onError(error);\n          });\n        }\n      });\n    }\n    return this._loadPromise;\n  }\n\n  /**\n   * Destroying the dash adapter\n   * @function destroy\n   * @override\n   */\n  destroy(): void {\n    DashAdapter._logger.debug('destroy');\n    super.destroy();\n    this._loadPromise = null;\n    this._sourceObj = null;\n    if (this._shaka) {\n      this._removeBindings();\n      this._shaka.destroy();\n    }\n    if (DashAdapter._drmProtocol) {\n      DashAdapter._drmProtocol.destroy();\n      DashAdapter._drmProtocol = null;\n    }\n  }\n\n  /**\n   * Get the original video tracks\n   * @function _getVideoTracks\n   * @returns {Array<Object>} - The original video tracks\n   * @private\n   */\n  _getVideoTracks(): Array<Object> {\n    let variantTracks = this._shaka.getVariantTracks();\n    let activeVariantTrack = variantTracks.filter((variantTrack) => {\n      return variantTrack.active;\n    })[0];\n    let videoTracks = variantTracks.filter((variantTrack) => {\n      return variantTrack.audioId === activeVariantTrack.audioId;\n    });\n    return videoTracks;\n  }\n\n  /**\n   * Get the original audio tracks\n   * @function _getAudioTracks\n   * @returns {Array<Object>} - The original audio tracks\n   * @private\n   */\n  _getAudioTracks(): Array<Object> {\n    let variantTracks = this._shaka.getVariantTracks();\n    let activeVariantTrack = variantTracks.filter((variantTrack) => {\n      return variantTrack.active;\n    })[0];\n    let audioTracks = variantTracks.filter((variantTrack) => {\n      return variantTrack.videoId === activeVariantTrack.videoId;\n    });\n    return audioTracks;\n  }\n\n  /**\n   * Get the parsed tracks\n   * @function _getParsedTracks\n   * @returns {Array<Track>} - The parsed tracks\n   * @private\n   */\n  _getParsedTracks(): Array<Track> {\n    if (this._shaka) {\n      let videoTracks = this._getParsedVideoTracks();\n      let audioTracks = this._getParsedAudioTracks();\n      let textTracks = this._getParsedTextTracks();\n      return videoTracks.concat(audioTracks).concat(textTracks);\n    }\n    return [];\n  }\n\n  /**\n   * Get the parsed video tracks\n   * @function _getParsedVideoTracks\n   * @returns {Array<VideoTrack>} - The parsed video tracks\n   * @private\n   */\n  _getParsedVideoTracks(): Array<VideoTrack> {\n    let videoTracks = this._getVideoTracks();\n    let parsedTracks = [];\n    if (videoTracks) {\n      for (let i = 0; i < videoTracks.length; i++) {\n        let settings = {\n          id: videoTracks[i].id,\n          bandwidth: videoTracks[i].bandwidth,\n          width: videoTracks[i].width,\n          height: videoTracks[i].height,\n          active: videoTracks[i].active,\n          label: videoTracks[i].label,\n          index: i\n        };\n        parsedTracks.push(new VideoTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed audio tracks\n   * @function _getParsedAudioTracks\n   * @returns {Array<AudioTrack>} - The parsed audio tracks\n   * @private\n   */\n  _getParsedAudioTracks(): Array<AudioTrack> {\n    let audioTracks = this._getAudioTracks();\n    let parsedTracks = [];\n    if (audioTracks) {\n      for (let i = 0; i < audioTracks.length; i++) {\n        let settings = {\n          id: audioTracks[i].id,\n          active: audioTracks[i].active,\n          label: audioTracks[i].label,\n          language: audioTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new AudioTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Get the parsed text tracks\n   * @function _getParsedTextTracks\n   * @returns {Array<TextTrack>} - The parsed text tracks\n   * @private\n   */\n  _getParsedTextTracks(): Array<TextTrack> {\n    let textTracks = this._shaka.getTextTracks();\n    let parsedTracks = [];\n    if (textTracks) {\n      for (let i = 0; i < textTracks.length; i++) {\n        let settings = {\n          kind: textTracks[i].kind ? textTracks[i].kind + 's' : \"\",\n          active: textTracks[i].active,\n          label: textTracks[i].label,\n          language: textTracks[i].language,\n          index: i\n        };\n        parsedTracks.push(new TextTrack(settings));\n      }\n    }\n    return parsedTracks;\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the video track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._shaka) {\n      let videoTracks = this._getVideoTracks();\n      if ((videoTrack instanceof VideoTrack) && videoTracks) {\n        let selectedVideoTrack = videoTracks[videoTrack.index];\n        if (selectedVideoTrack) {\n          if (this.isAdaptiveBitrateEnabled()) {\n            this._shaka.configure({abr: {enabled: false}});\n            this._trigger(BaseMediaSourceAdapter.CustomEvents.ABR_MODE_CHANGED, {mode: 'manual'});\n          }\n          if (!selectedVideoTrack.active) {\n            this._shaka.selectVariantTrack(videoTracks[videoTrack.index], true);\n            this._onTrackChanged(videoTrack);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._shaka && (audioTrack instanceof AudioTrack) && !audioTrack.active) {\n      this._shaka.selectAudioLanguage(audioTrack.language);\n      this._onTrackChanged(audioTrack);\n    }\n  }\n\n  /**\n   * Select a text track\n   * @function selectTextTrack\n   * @param {TextTrack} textTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectTextTrack(textTrack: TextTrack): void {\n    if (this._shaka && (textTrack instanceof TextTrack) && !textTrack.active && (textTrack.kind === 'subtitles' || textTrack.kind === 'captions')) {\n      this._shaka.selectTextLanguage(textTrack.language);\n      this._shaka.setTextTrackVisibility(false);\n      this._onTrackChanged(textTrack);\n    }\n  }\n\n  /**\n   * Hide the text track\n   * @function hideTextTrack\n   * @returns {void}\n   * @public\n   */\n  hideTextTrack(): void {\n    if (this._shaka) {\n      this._shaka.setTextTrackVisibility(false);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate switching\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._shaka && !this.isAdaptiveBitrateEnabled()) {\n      this._trigger(BaseMediaSourceAdapter.CustomEvents.ABR_MODE_CHANGED, {mode: 'auto'});\n      this._shaka.configure({abr: {enabled: true}});\n    }\n  }\n\n  /**\n   * Checking if adaptive bitrate switching is enabled.\n   * @function isAdaptiveBitrateEnabled\n   * @returns {boolean} - Whether adaptive bitrate is enabled.\n   * @public\n   */\n  isAdaptiveBitrateEnabled(): boolean {\n    if (this._shaka) {\n      let shakaConfig = this._shaka.getConfiguration();\n      return shakaConfig.abr.enabled;\n    }\n    return false;\n  }\n\n  /**\n   * Seeking to live edge.\n   * @function seekToLiveEdge\n   * @returns {void}\n   * @public\n   */\n  seekToLiveEdge(): void {\n    if (this._shaka) {\n      this._videoElement.currentTime = this._shaka.seekRange().end;\n    }\n  }\n\n  /**\n   * Checking if the current playback is live.\n   * @function isLive\n   * @returns {boolean} - Whether playback is live.\n   * @public\n   */\n  isLive(): boolean {\n    if (this._shaka) {\n      return this._shaka.isLive();\n    }\n    return false;\n  }\n\n  /**\n   * An handler to shaka adaptation event\n   * @function _onAdaptation\n   * @returns {void}\n   * @private\n   */\n  _onAdaptation(): void {\n    let selectedVideoTrack = this._getParsedVideoTracks().filter(function (videoTrack) {\n      return videoTrack.active;\n    })[0];\n    this._onTrackChanged(selectedVideoTrack);\n  }\n\n  /**\n   * An handler to shaka error event\n   * @function _onError\n   * @param {any} error - the error\n   * @returns {void}\n   * @private\n   */\n  _onError(error: any): void {\n    DashAdapter._logger.error(error);\n  }\n\n  /**\n   * Getter for the src that the adapter plays on the video element.\n   * In case the adapter preformed a load it will return the manifest url.\n   * @public\n   * @returns {string} - The src url.\n   */\n  get src(): string {\n    if (this._loadPromise && this._sourceObj) {\n      return this._sourceObj.url;\n    }\n    return \"\";\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {Number} - The current playback time.\n   * @public\n   */\n  get currentTime(): number {\n    if (this._shaka && this.isLive()) {\n      return this._videoElement.currentTime - this._shaka.seekRange().start;\n    } else {\n      return super.currentTime;\n    }\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   * @returns {void}\n   */\n  set currentTime(to: number): void {\n    if (this._shaka && this.isLive()) {\n      this._videoElement.currentTime = this._shaka.seekRange().start + to;\n    } else {\n      super.currentTime = to;\n    }\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {Number} - The playback duration.\n   * @public\n   */\n  get duration(): number {\n    if (this._shaka && this.isLive()) {\n      let seekRange = this._shaka.seekRange();\n      return seekRange.end - seekRange.start;\n    } else {\n      return super.duration;\n    }\n  }\n}\n\n// Register DashAdapter to the media source adapter manager\nif (DashAdapter.isSupported()) {\n  registerMediaSourceAdapter(DashAdapter);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./dash-adapter.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}\n// module id = 2\n// module chunks = 0","// @flow\nimport {BaseDrmProtocol, Env} from 'playkit-js'\n\nconst DrmSupport = BaseDrmProtocol.DrmSupport;\nconst DrmScheme = BaseDrmProtocol.DrmScheme;\n\nexport default class Widevine extends BaseDrmProtocol {\n  static _logger = BaseDrmProtocol.getLogger('Widevine');\n\n  /**\n   * Widevine playback supports in case 2 conditions are met:\n   * 1. The environment supports Widevine playback.\n   * 2. The drm data of the source object contains entry with Widevine scheme.\n   * @param {Array<Object>} drmData - The drm data to check.\n   * @return {boolean} - Whether FairPlay can be play on the current environment.\n   */\n  static canPlayDrm(drmData: Array<Object>): boolean {\n    Widevine._logger.debug(\"Can play DRM scheme of: \" + DrmScheme.WIDEVINE);\n    return DrmSupport.isProtocolSupported(DrmScheme.WIDEVINE, drmData);\n  }\n\n  /**\n   * Sets the Widevine playback.\n   * @param {Object} config - The shaka player config.\n   * @param {Array<Object>} drmData - The drm data.\n   * @returns {void}\n   */\n  static setDrmPlayback(config: Object, drmData: Array<Object>): void {\n    Widevine._logger.debug(\"Sets drm playback\");\n    let browser = Env.browser.name;\n    let wwDrmEntry = drmData.find((drmEntry) => drmEntry.scheme === DrmScheme.WIDEVINE);\n    if (wwDrmEntry) {\n      config.drm = {\n        servers: {\n          [DrmScheme.WIDEVINE]: wwDrmEntry.licenseUrl\n        },\n        advanced: {}\n      };\n      if (browser === 'Chrome') {\n        config.drm.advanced = {\n          [DrmScheme.WIDEVINE]: {\n            'videoRobustness': 'SW_SECURE_CRYPTO',\n            'audioRobustness': 'SW_SECURE_CRYPTO'\n          }\n        };\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./drm/widevine.js","// @flow\nimport {BaseDrmProtocol} from 'playkit-js'\n\nconst DrmSupport = BaseDrmProtocol.DrmSupport;\nconst DrmScheme = BaseDrmProtocol.DrmScheme;\n\nexport default class PlayReady extends BaseDrmProtocol {\n  static _logger = BaseDrmProtocol.getLogger('PlayReady');\n\n  /**\n   * PlayReady playback supports in case 2 conditions are met:\n   * 1. The environment supports PlayReady playback.\n   * 2. The drm data of the source object contains entry with PlayReady scheme.\n   * @param {Array<Object>} drmData - The drm data to check.\n   * @return {boolean} - Whether FairPlay can be play on the current environment.\n   */\n  static canPlayDrm(drmData: Array<Object>): boolean {\n    PlayReady._logger.debug(\"Can play DRM scheme of: \" + DrmScheme.PLAYREADY);\n    return DrmSupport.isProtocolSupported(DrmScheme.PLAYREADY, drmData);\n  }\n\n  /**\n   * Sets the PlayReady playback.\n   * @param {Object} config - The shaka player config.\n   * @param {Array<Object>} drmData - The drm data.\n   * @returns {void}\n   */\n  static setDrmPlayback(config: Object, drmData: Array<Object>): void {\n    PlayReady._logger.debug(\"Sets drm playback\");\n    let prDrmEntry = drmData.find((drmEntry) => drmEntry.scheme === DrmScheme.PLAYREADY);\n    if (prDrmEntry) {\n      config.drm = {\n        servers: {\n          [DrmScheme.PLAYREADY]: prDrmEntry.licenseUrl\n        }\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./drm/playready.js"],"sourceRoot":""}